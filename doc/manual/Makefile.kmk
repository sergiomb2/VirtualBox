# $Id$
## @file
# Sub-Makefile for the VirtualBox User Manual, SDK reference and other manuals.
#

#
# Copyright (C) 2006-2023 Oracle and/or its affiliates.
#
# This file is part of VirtualBox base platform packages, as
# available from https://www.virtualbox.org.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, in version 3 of the
# License.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <https://www.gnu.org/licenses>.
#
# SPDX-License-Identifier: GPL-3.0-only
#

#
# This slightly messy makefile transforms the DocBook XML source for the
# user manual into presentation output. We support two targets:
#
#   -- UserManual.pdf, generated by LaTex
#
#
#   Both files end up in PATH_STAGE_BIN.
#
#   Both targets indirectly depend on the XML files in this directory;
#   "indirectly" because we first copy them to PATH_TARGET and hack them
#   up a bit for variable substitution and such (see below).
#   The toolchains are roughly like this:
#
#   -- PDF file via Apache FOP: pre-process the XML files in PATH_TARGET,
#      then create a .FO file (another XML format for "formatted objects")
#      via xsltproc, then feed the .FO file to Apache FOP to create the PDF.
#
#   -- PDF file via LaTeX: pre-process the XML files in PATH_TARGET, then
#      run our custom "dblatex" perl script on UserManual.xml, which parses
#      the XML (using the Perl SAX parsers) and dumps a matching LaTeX file
#      to UserManual.tex. This is then regularly processed by pdflatex to
#      generate PDF.
#
#

SUB_DEPTH = ../..
include $(KBUILD_PATH)/subheader.kmk

ifndef VBOX_DOC_MANUAL_CONFIG_KMK_INCLUDED
 include $(PATH_SUB_CURRENT)/Config.kmk
endif



#
# Globals
#

# Error out if someone tries to override old globals.
ifdef HTMLHELPOPTS
 $(error HTMLHELPOPTS was renamed to VBOX_HTMLHELP_OPTS!)
endif
ifdef DOCBOOKPATH
 $(error DOCBOOKPATH was renamed to VBOX_PATH_DOCBOOK!)
endif
ifdef DOCBOOKPATH
 $(error DOCBOOKPATH was renamed to VBOX_PATH_DOCBOOK!)
endif
ifdef XML_CATALOG
 $(error XML_CATALOG was renamed to VBOX_XML_CATALOG!)
endif
ifdef XML_CATALOG_DOCBOOK
 $(error XML_CATALOG_DOCBOOK was renamed to VBOX_XML_CATALOG_DOCBOOK!)
endif
ifdef PDFLATEX_INTERACTION
 $(error PDFLATEX_INTERACTION was renamed to VBOX_PDFLATEX_INTERACTION!)
endif
ifdef PDFLATEX
 $(error PDFLATEX was renamed to VBOX_PDFLATEX_CMD!)
endif
ifdef HHC
 $(error HHC was renamed to VBOX_HHC!)
endif

VBOX_DITA_CONVERTER_PATH = $(PATH_ROOT)/src/libs/dbdita-1.0
VBOX_DITA_ORIGINAL_PATH = $(PATH_ROOT)/src/libs/dita-ot-1.8.5
VBOX_DITA_PATH = $(VBOX_PATH_MANUAL_OUTBASE)/en_US/dita-ot-1.8.5

VBOX_QHELP_OUTPUT_FILES = \
	UserManual.qch \
	UserManual.qhc

# VBOX_PDFLATEX_INTERACTION = errorstopmode - Use this when you wants to figure out build failures
#                                             without catting the log a million times.
VBOX_PDFLATEX_INTERACTION ?= batchmode
ifeq ($(KBUILD_HOST),win)
 ifndef VBOX_PDFLATEX
  VBOX_PDFLATEX           := $(firstword $(rsort $(wildcard $(KBUILD_DEVTOOLS)/win.x86/miktex-portable/*/miktex/bin/pdflatex.exe)))
  ifneq ($(VBOX_PDFLATEX),)
   VBOX_PDFLATEX_CMD       = $(VBOX_PDFLATEX) -halt-on-error -interaction $(VBOX_PDFLATEX_INTERACTION)
  endif
 endif
 ifndef VBOX_PDFLATEX
  # Tell MiKTeX to automatically download packages if system wide install.
  VBOX_PDFLATEX           := pdflatex
  VBOX_PDFLATEX_CMD        = $(VBOX_PDFLATEX) -halt-on-error -interaction $(VBOX_PDFLATEX_INTERACTION) --enable-installer
 endif
else
 VBOX_PDFLATEX            ?= pdflatex
 VBOX_PDFLATEX_HALT        = $(shell ( $(VBOX_PDFLATEX) -version | head -1 | grep 141592 > /dev/null ) && echo -halt-on-error )
 VBOX_PDFLATEX_CMD         = pdflatex $(VBOX_PDFLATEX_HALT) -interaction $(VBOX_PDFLATEX_INTERACTION)
endif

# Windows HTML Help Workshop compiler (stupid thing always returns an error!)
VBOX_HHC = -$(EXEC_X86_WIN32) $(VBOX_PATH_HTML_HELP_WORKSHOP)/hhc.exe


# Additional xsltproc options when generating
VBOX_HTMLHELP_OPTS ?=

# SDK related globals.
VBOX_MANUAL_APIREF_TMP = $(VBOX_PATH_MANUAL_OUTBASE)/en_US/SDKRef_apiref.xml
VBOX_DOC_XIDL_SRC      = $(PATH_ROOT)/src/VBox/Main/idl/VirtualBox.xidl
VBOX_DOC_XIDL_SRC_TMP  = $(VBOX_PATH_MANUAL_OUTBASE)/en_US/VirtualBox.xidl.tmp


#
# Targets
#

BLDDIRS += $(addprefix $(VBOX_PATH_MANUAL_OUTBASE)/, $(VBOX_MANUAL_LANGUAGES))

if defined(VBOX_WITH_DOCS) && (!defined(VBOX_ONLY_BUILD) || defined(VBOX_ONLY_DOCS) || defined(VBOX_ONLY_SDK))
 if defined(VBOX_ONLY_SDK) || defined(VBOX_WITH_DOCS_SDKREF)
  INSTALLS += VBox-docs-sdkref
 endif

 ifdef VBOX_WITH_DOCS_HTML
  INSTALLS += VBox-docs-usermanual-html
  VBOX_PATH_BIN_HTML = $(PATH_STAGE_BIN)/UserManual-html.zip
 else  # Do not build html.
  VBOX_PATH_BIN_HTML =
 endif

 ifdef VBOX_WITH_DOCS_QHELP
  INSTALLS += VBox-docs-usermanual-qhc
  INSTALLS += VBox-docs-usermanual-qch
  ifdef VBOX_WITH_QT6
   USES += qt6
   QHELPGENERATOR = $(PATH_TOOL_QT6_LIBEXEC)/qhelpgenerator
  else # Qt5
   USES += qt5
   QHELPGENERATOR_VERSION_MINOR = $(shell $(REDIRECT) -E QT_QPA_PLATFORM_PLUGIN_PATH=$(PATH_SDK_QT5)/plugins -- $(PATH_TOOL_QT5_BIN)/qhelpgenerator -v 2>/dev/null | $(SED) -ne 's/.*(Qt [1-9][0-9]*\.\([1-9][0-9]*\)\.[1-9][0-9]*).*$$/\1/p')
   QHELPGENERATOR = $(PATH_TOOL_QT5_BIN)/$(if-expr $(QHELPGENERATOR_VERSION_MINOR) >= 12,qhelpgenerator,qcollectiongenerator)
  endif
 endif
 ifdef VBOX_WITH_DOCS_QHELP_PACKING
  VBOX_PATH_BIN_QHELP = $(PATH_STAGE_BIN)/UserManual.qch
  VBOX_PATH_BIN_QHELP += $(PATH_STAGE_BIN)/UserManual.qhc
 else  # Do not install/pack qhelp.
  VBOX_PATH_BIN_QHELP =
 endif

 .NOTPARALLEL: \
 		$(VBOX_PATH_MANUAL_OUTBASE)/en_US/qhelp/UserManual.qch + $(VBOX_PATH_MANUAL_OUTBASE)/en_US/UserManual.qhc \
 		$(VBOX_PATH_MANUAL_OUTBASE)/en_US/UserManual.pdf \
 		$(VBOX_PATH_MANUAL_OUTBASE)/en_US/UserManual.zip

 ifndef VBOX_ONLY_SDK
  VBOX_MANUAL_PACK += \
  	$(PATH_STAGE_BIN)/UserManual.pdf \
  	$(VBOX_PATH_BIN_HTML) \
  	$(VBOX_PATH_BIN_CHM) \
  	$(VBOX_PATH_BIN_QHELP)
  INSTALLS += VBox-docs-usermanual

  ifdef VBOX_WITH_DOCS_TRANSLATIONS
   INSTALLS += VBox-docs-usermanual-l10n
   VBOX_MANUAL_PACK += \
   	$(foreach f,$(VBOX_MANUAL_ADD_LANGUAGES),$(PATH_STAGE_BIN)/UserManual_$(f).pdf)
  endif
 endif # !VBOX_ONLY_SDK

 ifdef VBOX_WITH_DOCS_ACCESSIBILITY
  INSTALLS += VBox-docs-accessibility
  INSTALLS += VBox-docs-accessibility-html
 endif

 ifdef VBOX_ONLY_DOCS
  PACKING += $(PATH_STAGE_BIN)/VBoxDocumentation.zip
 endif

 ifdef VBOX_WITH_DOCS_TRANSLATIONS
  VBOX_MANUAL_LANGUAGES += $(VBOX_MANUAL_ADD_LANGUAGES)
 endif

 $(foreach lang,$(VBOX_MANUAL_LANGUAGES), \
 $(eval VBOX_MANUAL_XML_FILES_GENERATED_$$(lang) := \
 	$$(addprefix $$(VBOX_PATH_MANUAL_OUTBASE)/$$(lang)/user_,$$(filter man_VBoxManage%,$$(VBOX_MANUAL_XML_REFENTRY_FILES))) \
 	$$(addprefix $$(VBOX_PATH_MANUAL_OUTBASE)/overview_,$$(filter man_VBoxManage%,$$(VBOX_MANUAL_XML_REFENTRY_FILES))) \
 	$$(VBOX_PATH_MANUAL_OUTBASE)/$$(lang)/user_man_VBoxHeadless.xml \
 	$$(VBOX_PATH_MANUAL_OUTBASE)/$$(lang)/user_man_vboximg-mount.xml \
 	$$(VBOX_PATH_MANUAL_OUTBASE)/$$(lang)/user_isomakercmd-man.xml))

 VBOX_SDKREF_XML_FILES = \
 	SDKRef.xml

 VBOX_ACCESSIBILITY_XML_FILES = \
 	Accessibility.xml


 # Wildcard the images path for every supported language
 $(foreach f,$(VBOX_MANUAL_LANGUAGES), \
 	$(eval VBOX_MANUAL_PNG_FILES_$$(f) := $$(patsubst $$(VBOX_PATH_MANUAL_SRC)/$$(f)/%,%,$$(wildcard $$(VBOX_PATH_MANUAL_SRC)/$$(f)/images/*.png))))

 VBOX_MANUAL_TEX_UNICODE_FILES = \
 	$(wildcard $(VBOX_PATH_MANUAL_SRC)/texfiles/unicode/*)

 VBOX_MANUAL_LATEX_FILES_TARGET = \
 	$(addprefix UserManual.,aux log out toc tex)

 VBOX_SDKREF_LATEX_FILES_TARGET = \
 	$(addprefix SDKRef.,aux log out toc tex)

 VBOX_ACCESSIBILITY_LATEX_FILES_TARGET = \
 	$(addprefix Accessibility.,aux log out toc tex)

 BLDDIRS += \
 	$(addprefix $(VBOX_PATH_MANUAL_OUTBASE)/, \
 	$(addsuffix /images, $(VBOX_MANUAL_LANGUAGES)) \
 	$(addsuffix /html-single, $(VBOX_MANUAL_LANGUAGES)) \
 	$(addsuffix /html-chunks, $(VBOX_MANUAL_LANGUAGES)) \
 	$(addsuffix /qhelp, $(VBOX_MANUAL_LANGUAGES)) \
 	$(addsuffix /qhelp/images, $(VBOX_MANUAL_LANGUAGES)) \
 	$(addsuffix /HTMLHelp, $(VBOX_MANUAL_LANGUAGES)) \
 	$(addsuffix /HTMLHelp/images, $(VBOX_MANUAL_LANGUAGES)) \
 	)

 # Explicit cleaning has some overlap with default cleaning rules, since this
 # Makefile is using very complex conditionals for selectively creating
 # specific files, and not everyone remembers to use the same with "kmk clean".
 OTHER_CLEAN += \
 	$(VBOX_XML_CATALOG) \
 	$(VBOX_XML_CATALOG_DOCBOOK) \
 	$(VBOX_XML_CATALOG_MANUAL) \
 	$(VBOX_XML_ENTITIES) \
 	$(foreach lang,$(VBOX_MANUAL_LANGUAGES),$(addprefix $(VBOX_PATH_MANUAL_OUTBASE)/$(lang)/, \
 	$(VBOX_XML_XREF_TO_TEXT) \
 	$(VBOX_XML_XREF_TO_TEXT).cat \
 	$(addprefix user_,$(VBOX_MANUAL_XML_REFENTRY_FILES)) \
 	$(VBOX_MANUAL_XML_REFENTRY_FILES) \
 	$(patsubst man_%,%.1,$(basename $(VBOX_MANUAL_XML_REFENTRY_FILES))) \
 	man_VBoxHeadless.xml \
 	user_man_VBoxHeadless.xml \
 	man_vboximg-mount.xml \
 	user_man_vboximg-mount.xml \
 	isomakercmd-man.xml \
 	user_isomakercmd-man.xml \
 	$(VBOX_MANUAL_LATEX_FILES_TARGET) \
 	$(VBOX_MANUAL_PNG_FILES_$(lang)) \
 	$(notdir $(VBOX_MANUAL_TEX_UNICODE_FILES)) \
 	$(addprefix HTMLHelp/,$(VBOX_MANUAL_PNG_FILES_$(lang))) \
 	$(addprefix qhelp/,   $(VBOX_MANUAL_PNG_FILES_$(lang))) \
 	html-single/UserManual.html \
 	$(addprefix qhelp/, UserManual.qhp UserManual.qhcp $(VBOX_QHELP_OUTPUT_FILES)) \
 	$(addprefix HTMLHelp/,    index.html go01.html) \
 	$(addprefix qhelp/,       index.html go01.html) \
 	$(addprefix html-chunks/, index.html go01.html) \
 	$(foreach n,01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 \
 	,html-chunks/ch$(n).html \
 	html-chunks/re$(n).html \
 	HTMLHelp/ch$(n).html \
 	HTMLHelp/re$(n).html \
 	$(foreach d2,0 1 2 3 4 5 6 7 8 9,$(foreach d1,0 1 2 3 4 5 6 7 8 9,HTMLHelp/ch$(n)s$(d2)$(d1).html)) \
 	qhelp/ch$(n).html \
 	qhelp/re$(n).html \
 	$(foreach d2,0 1 2 3 4 5 6 7 8 9,$(foreach d1,0 1 2 3 4 5 6 7 8 9,qhelp/ch$(n)s$(d2)$(d1).html)) ) \
 	$(foreach n,a b c \
 	,html-chunks/ap$(n).html \
 	HTMLHelp/ap$(n).html \
 	$(foreach s,01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20,HTMLHelp/ap$(n)s$(s).html) \
 	qhelp/ap$(n).html \
 	$(foreach s,01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20,qhelp/ap$(n)s$(s).html) ) \
 	$(foreach n,01 02 03 04 05 \
 	,html-chunks/pr$(n).html \
 	HTMLHelp/pr$(n).html \
 	$(foreach s,01 02 03 04 05 06 07 08,HTMLHelp/pr$(n)s$(s).html) \
 	qhelp/pr$(n).html \
 	$(foreach s,01 02 03 04 05 06 07 08,qhelp/pr$(n)s$(s).html) ) \
 	HTMLHelp/toc.hhc \
 	HTMLHelp/htmlhelp.hhp \
 	qhelp/toc.hhc \
 	qhelp/htmlhelp.hhp \
 	UserManual.pdf \
 	VirtualBox.chm \
 	$(VBOX_QHELP_OUTPUT_FILES) \
 	ChangeLog.html \
 	validatemanual.run \
 	validateaccessibility.run \
 	validatesdkref.run \
 	)) \
 	$(VBOX_PATH_MANUAL_OUTBASE)/titlepage-htmlhelp.xsl \
 	$(addprefix $(VBOX_PATH_MANUAL_OUTBASE)/overview_,$(VBOX_MANUAL_XML_REFENTRY_FILES)) \
 	$(foreach f,$(VBOX_MANUAL_ADD_LANGUAGES),$(PATH_STAGE_BIN)/UserManual_$(f).pdf) \
 	$(foreach f,$(VBOX_MANUAL_ADD_LANGUAGES),$(PATH_STAGE_BIN)/VirtualBox_$(f).chm) \
 	$(PATH_STAGE_BIN)/UserManual.pdf \
 	$(PATH_STAGE_BIN)/VirtualBox.chm \
 	\
 	$(addprefix $(VBOX_PATH_MANUAL_OUTBASE)/en_US/, \
 	$(VBOX_SDKREF_LATEX_FILES_TARGET) \
 	SDKRef.pdf \
 	) \
 	$(PATH_STAGE_BIN)/sdk/docs/SDKRef.pdf \
 	\
 	$(addprefix $(VBOX_PATH_MANUAL_OUTBASE)/en_US/, \
 	$(VBOX_ACCESSIBILITY_LATEX_FILES_TARGET) \
 	html-single/Accessibility.html \
 	Accessibility.pdf \
 	) \
 	$(PATH_STAGE_BIN)/Accessibility.html \
 	$(PATH_STAGE_BIN)/Accessibility.pdf \
 	\
 	$(VBOX_DOC_XIDL_SRC_TMP) \
 	$(VBOX_MANUAL_APIREF_TMP)

endif # if defined(VBOX_WITH_DOCS) && (!defined(VBOX_ONLY_BUILD) || defined(VBOX_ONLY_DOCS) || defined(VBOX_ONLY_SDK))

#
# target for installing UserManual.pdf
#
VBox-docs-usermanual_INST = $(INST_BIN)
VBox-docs-usermanual_MODE = a+r,u+w
VBox-docs-usermanual_SOURCES = $(VBOX_PATH_MANUAL_OUTBASE)/en_US/UserManual.pdf

VBox-docs-usermanual-qhc_INST = $(INST_BIN)
VBox-docs-usermanual-qhc_MODE = a+r,u+w
VBox-docs-usermanual-qhc_SOURCES = $(VBOX_PATH_MANUAL_OUTBASE)/en_US/qhelp/UserManual.qhc

VBox-docs-usermanual-qch_INST = $(INST_BIN)
VBox-docs-usermanual-qch_MODE = a+r,u+w
VBox-docs-usermanual-qch_SOURCES = $(VBOX_PATH_MANUAL_OUTBASE)/en_US/qhelp/UserManual.qch

#
# target for installing translated UserManual_*.pdf
#
VBox-docs-usermanual-l10n_INST = $(INST_BIN)
VBox-docs-usermanual-l10n_MODE = a+r,u+w
VBox-docs-usermanual-l10n_SOURCES = $(foreach f,$(VBOX_MANUAL_ADD_LANGUAGES),$(VBOX_PATH_MANUAL_OUTBASE)/$(f)/UserManual.pdf=>UserManual_$(f).pdf)

#
# target for installing the chunked HTML docs
#
VBox-docs-usermanual-html_INST = $(INST_BIN)
VBox-docs-usermanual-html_MODE = a+r,u+w
VBox-docs-usermanual-html_SOURCES = $(VBOX_PATH_MANUAL_OUTBASE)/en_US/UserManual.zip=>UserManual-html.zip

#
# target for installing VirtualBox.chm
#
VBox-docs-usermanual-chm_INST = $(INST_BIN)
VBox-docs-usermanual-chm_MODE = a+r,u+w
VBox-docs-usermanual-chm_SOURCES = $(VBOX_PATH_MANUAL_OUTBASE)/en_US/VirtualBox.chm

#
# target for installing translated VirtualBox_*.chm
#
VBox-docs-usermanual-l10n-chm_INST = $(INST_BIN)
VBox-docs-usermanual-l10n-chm_MODE = a+r,u+w
VBox-docs-usermanual-l10n-chm_SOURCES = $(foreach f,$(VBOX_MANUAL_ADD_LANGUAGES),$(VBOX_PATH_MANUAL_OUTBASE)/$(f)/VirtualBox.chm=>VirtualBox_$(f).chm)

#
# target for installing SDKRef.pdf
#
VBox-docs-sdkref_INST = $(INST_SDK)docs/
VBox-docs-sdkref_MODE = a+r,u+w
VBox-docs-sdkref_SOURCES = $(VBOX_PATH_MANUAL_OUTBASE)/en_US/SDKRef.pdf

#
# target for installing Accessibility.pdf
#
VBox-docs-accessibility_INST = $(INST_BIN)
VBox-docs-accessibility_MODE = a+r,u+w
VBox-docs-accessibility_SOURCES = $(VBOX_PATH_MANUAL_OUTBASE)/en_US/Accessibility.pdf

#
# target for installing Accessibility.html
#
VBox-docs-accessibility-html_INST = $(INST_BIN)
VBox-docs-accessibility-html_MODE = a+r,u+w
VBox-docs-accessibility-html_SOURCES = $(VBOX_PATH_MANUAL_OUTBASE)/en_US/html-single/Accessibility.html

if defined(VBOX_WITH_DOCS) && (!defined(VBOX_ONLY_BUILD) || defined(VBOX_ONLY_DOCS) || defined(VBOX_ONLY_SDK))

 ##
 # Morph man pages into manual sections.
 # $(evalcall2 def_vbox_refentry_to_user_sect1)
 # @param    1  Language.
 # @param    2  the refentry xml base file name.
 # @param    3  the full refentry xml file path.
 define def_vbox_refentry_to_user_sect1
  $$(VBOX_PATH_MANUAL_OUTBASE)/$(1)/user_$(2): $(3) \
  		$$(VBOX_PATH_MANUAL_SRC)/docbook-refentry-to-manual-sect1.xsl \
  		$$(VBOX_XML_CATALOG) $$(VBOX_XML_CATALOG_DOCBOOK) $$(VBOX_XML_CATALOG_MANUAL) \
  		$$(VBOX_XML_ENTITIES) $$(VBOX_VERSION_STAMP) | $$$$(dir $$$$@)
	$$(call MSG_TOOL,xsltproc $$(notdir $$(filter %.xsl,$$^)),,$$(filter %.xml,$$^),$$@)
	$$(QUIET)$$(RM) -f "$$@"
	$$(QUIET)$$(call VBOX_XSLTPROC_WITH_CAT) --output $$@ $$(VBOX_PATH_MANUAL_SRC)/docbook-refentry-to-manual-sect1.xsl $$<
 endef
 $(foreach lang,$(VBOX_MANUAL_LANGUAGES),$(foreach file,$(VBOX_MANUAL_XML_REFENTRY_FILES) \
man_VBoxHeadless.xml \
man_vboximg-mount.xml \
, $(evalcall2 def_vbox_refentry_to_user_sect1,$(lang),$(file),$(VBOX_PATH_MANUAL_SRC)/$(lang)/$(file))))
 $(foreach lang,$(VBOX_MANUAL_LANGUAGES) \
,$(evalcall2 def_vbox_refentry_to_user_sect1,$(lang),isomakercmd-man.xml,$(PATH_ROOT)/src/VBox/Runtime/common/fs/isomakercmd-man.xml))


 # Generates the VBoxManage command overview include file (shared between
 # languages) from the refsynopsisdiv section of the man pages.
 $(addprefix $(VBOX_PATH_MANUAL_OUTBASE)/overview_,$(VBOX_MANUAL_XML_REFENTRY_FILES)): \
 		$(VBOX_PATH_MANUAL_SRC)/docbook-refentry-to-manual-overview.xsl \
 		$$(patsubst overview_%,$$(VBOX_PATH_MANUAL_SRC)/en_US/%,$$(notdir $$@)) \
 		$(VBOX_XML_CATALOG) $(VBOX_XML_CATALOG_DOCBOOK) $(VBOX_XML_CATALOG_MANUAL) \
 		$(VBOX_XML_ENTITIES) | $$(dir $$@)
	$(call MSG_TOOL,xsltproc $(notdir $(filter %.xsl,$^)),,$(firstword $(filter %.xml,$^)),$@)
	$(QUIET)$(call VBOX_XSLTPROC_WITH_CAT) --output "$@" $< $(filter %.xml,$^)





 ##########################################################################################
 #
 #  Shared rules for PDF generation
 #
 ##########################################################################################

 ifndef VBOX_OSE
  # copy ucs.sty and related files
  $(foreach f,$(VBOX_MANUAL_LANGUAGES),$(VBOX_PATH_MANUAL_OUTBASE)/$f/ucs.sty):
	$(call MSG_L1,Copying unicode support for LaTeX)
	$(QUIET)$(INSTALL_STAGING) -m0644 -- $(VBOX_MANUAL_TEX_UNICODE_FILES) "$(@D)"
 endif

 # copy the PNG files.
 # Note: out_dir needs to be referenced with an escaped $ so it doesn't expand as eval expands it input.
 define def_vbox_cp_images_pdf
  local out_dir := $(VBOX_PATH_MANUAL_OUTBASE)/$(lang)
  $(addprefix $$(out_dir)/,$(VBOX_MANUAL_PNG_FILES_$(lang))): \
  		$$(out_dir)/% : $(VBOX_PATH_MANUAL_SRC)/$(lang)/% | $$$$(dir $$$$@)
	$$(call MSG_L1,Copying temporary $$< => $$@)
	$$(QUIET)$$(INSTALL_STAGING) -m0644 -- '$$<' '$$(@D)'
 endef
 $(foreach lang,$(VBOX_MANUAL_LANGUAGES),$(evalcall2 def_vbox_cp_images_pdf))


 ##########################################################################################
 #
 #  UserManual.pdf
 #
 ##########################################################################################

 ifdef TO_BE_REMOVED
  # Generate PDF from LaTeX
  # Note: out_dir needs to be referenced with an escaped $ so it doesn't expand as eval expands it input.
  define def_vbox_usermanual_tex_to_pdf
   local out_dir := $(VBOX_PATH_MANUAL_OUTBASE)/$(lang)
   $$(out_dir)/UserManual.pdf: \
   		$$(out_dir)/UserManual.tex \
   		$$(if $$(VBOX_OSE),,$$(out_dir)/ucs.sty) \
   		$$(addprefix $$(out_dir)/,$$(VBOX_MANUAL_PNG_FILES_$(lang))) | $$$$(dir $$$$@)
   # PDF generation via Latex: generate the .tex file
	$$(call MSG_L1,pdflatex $$< (four passes) -> $$@)
	$$(QUIET)$$(REDIRECT) -w+ti /dev/null -C $$(@D) -- $$(VBOX_PDFLATEX_CMD) UserManual.tex
	$$(QUIET)$$(REDIRECT) -w+ti /dev/null -C $$(@D) -- $$(VBOX_PDFLATEX_CMD) UserManual.tex
	$$(QUIET)$$(REDIRECT) -w+ti /dev/null -C $$(@D) -- $$(VBOX_PDFLATEX_CMD) UserManual.tex
	$$(QUIET)$$(REDIRECT) -w+ti /dev/null -C $$(@D) -- $$(VBOX_PDFLATEX_CMD) UserManual.tex
	$$(QUIET)$$(SED) -ne '/Warning: Hyper reference/p' $$(basename $$<).log
	$$(QUIET)$$(SED) -n \
		-e '/Warning: There were \(undefined references\|multiply-defined labels\)/{p; q 1}' \
		$$(basename $$@).log
	$$(call MSG_L1,Fresh LaTeX-generated PDF is now at $$@)
  endef
  $(foreach lang,$(VBOX_MANUAL_LANGUAGES),$(evalcall2 def_vbox_usermanual_tex_to_pdf))
 endif # TO_BE_REMOVED

 # Generate LaTeX from XML
 # Note: out_dir needs to be referenced with an escaped $ so it doesn't expand as eval expands it input.
 define def_vbox_usermanual_xml_to_tex
  local out_dir := $(VBOX_PATH_MANUAL_OUTBASE)/$(lang)
  $$(out_dir)/UserManual.tex: \
  		$$(addprefix $$(VBOX_PATH_MANUAL_SRC)/$(lang)/,$$(VBOX_MANUAL_XML_FILES)) \
  		$$(VBOX_MANUAL_XML_FILES_COMMON) \
  		$$(VBOX_MANUAL_XML_FILES_GENERATED_$(lang)) \
  		$$(VBOX_PATH_MANUAL_SRC)/docbook2latex.xsl \
  		$$(if $$(VBOX_HAVE_XMLLINT),$$(out_dir)/validatemanual.run,) \
  		$$(VBOX_XML_CATALOG) $$(VBOX_XML_CATALOG_DOCBOOK) $$(VBOX_XML_CATALOG_MANUAL) \
  		$$(VBOX_XML_ENTITIES) $$(MAKEFILE_CURRENT) | $$$$(dir $$$$@)
	$$(call MSG_TOOL,xsltproc $$(notdir $$(filter %.xsl,$$^)),,$$(firstword $$(filter %.xml,$$^)),$$@)
	$$(QUIET)$$(RM) -f $$(addprefix $$(@D)/,$$(VBOX_MANUAL_LATEX_FILES_TARGET))
  #   generate TeX source from processed docbook and store it in UserManual.tex.tmp;
  #   pass current language to xsltproc in TARGETLANG variable
	$$(QUIET)$$(call VBOX_XSLTPROC_WITH_CAT) --stringparam TARGETLANG $(lang) \
		-o $$@.tmp $$(VBOX_PATH_MANUAL_SRC)/docbook2latex.xsl $$<
  #   for pretty quotes, replace " with `` or '' depending on whether it's at the start of a word;
  #   the \QUOTE{} was inserted by docbook2latex.xsl for all quotes _outside_ of screen sections
	$$(QUIET)$$(SED) \
		-e 's|^\\QUOTE{}|\\OQ{}|g' \
		-e 's|\(\W\)\\QUOTE{}|\1\\OQ{}|g' \
		-e 's|\(\w\)\\QUOTE{}|\1\\CQ{}|g' \
		--output $$@ $$@.tmp
	$$(QUIET)$$(RM) -f $$@.tmp
 endef
 $(foreach lang,$(VBOX_MANUAL_LANGUAGES),$(evalcall2 def_vbox_usermanual_xml_to_tex))

 # Useful aliases
 usermanual UserManual.pdf:: $(PATH_STAGE_BIN)/UserManual.pdf

 debug-usermanual:
	$(MAKE) --pretty-command-printing -j1 VBOX_PDFLATEX_INTERACTION=errorstopmode $(PATH_STAGE_BIN)/UserManual.pdf

 #
 # Generate rules for validating the UserManual.xml.  These are invoked
 # automatically at build time, but can also be manually invoked via the
 # 'validatemanual' and 'validatemanual_<lang>' aliases.
 #
 define def_vbox_validate_xml
  validatemanual_$(lang):: $$(VBOX_PATH_MANUAL_OUTBASE)/$(lang)/validatemanual.run
  $$(VBOX_PATH_MANUAL_OUTBASE)/$(lang)/validatemanual.run: \
  		$$(addprefix $$(VBOX_PATH_MANUAL_SRC)/$(lang)/,$$(VBOX_MANUAL_XML_FILES)) \
  		$$(VBOX_MANUAL_XML_FILES_COMMON) \
  		$$(VBOX_MANUAL_XML_FILES_GENERATED_$(lang)) \
  		$$(VBOX_XML_CATALOG) $$(VBOX_XML_CATALOG_DOCBOOK) $$(VBOX_XML_CATALOG_MANUAL) \
  		$$(VBOX_XML_ENTITIES) $$(MAKEFILE_CURRENT) | $$$$(dir $$$$@)
	$$(call MSG_L1,Validating $$<)
	$$(QUIET)$$(VBOX_XMLLINT_WITH_CAT) --dtdvalid $$(VBOX_PATH_DOCBOOK_DTD)/docbookx.dtd $$<
	$$(QUIET)$$(APPEND) -t "$$@" "done"
 endef
 $(foreach lang,$(VBOX_MANUAL_LANGUAGES),$(evalcall2 def_vbox_validate_xml))


 # Handy aliases.
 validatemanual:: $(foreach lang,$(VBOX_MANUAL_LANGUAGES),validatemanual_$(lang))



 #
 # SDKRef.pdf
 #

 # Replace <tt> tags in VirtualBox.xidl.
 $(VBOX_DOC_XIDL_SRC_TMP): $(VBOX_DOC_XIDL_SRC) $(MAKEFILE_CURRENT) | $$(dir $$@)
	$(call MSG_L1,Generating $@)
	$(QUIET)$(SED) -e 's|@a \+\(\w\+\)|<tt>\1</tt>|g' \
	       -e 's|@c \+\(\w\+\)|<tt>\1</tt>|g' \
	       --output $@ $<

 # Generate SDKRef_apiref.xml as a docbook file excerpt that will be referenced from the SDKRef.xml.
 $(VBOX_MANUAL_APIREF_TMP): $(VBOX_PATH_MANUAL_SRC)/xidl2docbook.xsl $(VBOX_DOC_XIDL_SRC_TMP)
	$(call MSG_L1,Generating $@)
	$(QUIET)$(VBOX_XSLTPROC) $(VBOX_XSLTPROC_OPTS) --xinclude --nonet -o $@ $< $(VBOX_DOC_XIDL_SRC_TMP)

 # Turn SDKRef.xml into LaTeX.
 $(VBOX_PATH_MANUAL_OUTBASE)/en_US/SDKRef.tex: \
 		$(addprefix $(VBOX_PATH_MANUAL_SRC)/en_US/,$(VBOX_SDKREF_XML_FILES)) \
 		$(VBOX_MANUAL_APIREF_TMP) \
 		$(VBOX_PATH_MANUAL_SRC)/docbook2latex.xsl \
 		$(if $(VBOX_HAVE_XMLLINT),$(VBOX_PATH_MANUAL_OUTBASE)/en_US/validatesdkref.run,) \
 		$(VBOX_XML_CATALOG) $(VBOX_XML_CATALOG_DOCBOOK) $(VBOX_XML_CATALOG_MANUAL) \
 		$(VBOX_XML_ENTITIES) $(MAKEFILE_CURRENT) | $$(dir $$@)
	$(call MSG_TOOL,xsltproc $(notdir $(filter %.xsl,$^)),,$(firstword $(filter %.xml,$^)),$@)
	$(QUIET)$(RM) -f $(addprefix $(@D/),$(VBOX_SDKREF_LATEX_FILES_TARGET))
 #	generate TeX source from processed docbook and store it in SDKRef.tex.tmp
	$(QUIET)$(call VBOX_XSLTPROC_WITH_CAT) --stringparam TARGETLANG en_US \
		-o $@.tmp $(VBOX_PATH_MANUAL_SRC)/docbook2latex.xsl $<
 #	for pretty quotes, replace " with `` or '' depending on whether it's at the start of a word;
 #   the \QUOTE{} was inserted by docbook2latex.xsl for all quotes _outside_ of screen sections
	$(QUIET)$(SED) \
		-e 's|^\\QUOTE{}|\\OQ{}|g' \
		-e 's|\(\W\)\\QUOTE{}|\1\\OQ{}|g' \
		-e 's|\(\w\)\\QUOTE{}|\1\\CQ{}|g' \
		--output $@ $@.tmp
	$(QUIET)$(RM) -f $@.tmp

 # Turn SDKRef.tex into a PDF.
 $(VBOX_PATH_MANUAL_OUTBASE)/en_US/SDKRef.pdf: \
 		$(VBOX_PATH_MANUAL_OUTBASE)/en_US/SDKRef.tex \
 		$(if $(VBOX_OSE),,$(VBOX_PATH_MANUAL_OUTBASE)/en_US/ucs.sty) \
 		$(addprefix $(VBOX_PATH_MANUAL_OUTBASE)/en_US/,$(VBOX_MANUAL_PNG_FILES_en_US)) | $$(dir $$@)
	$(call MSG_L1,pdflatex $< (three passes))
	$(QUIET)$(REDIRECT) -C $(<D) -- $(VBOX_PDFLATEX_CMD) SDKRef.tex
	$(QUIET)$(REDIRECT) -C $(<D) -- $(VBOX_PDFLATEX_CMD) SDKRef.tex
	$(QUIET)$(REDIRECT) -C $(<D) -- $(VBOX_PDFLATEX_CMD) SDKRef.tex
	$(QUIET)$(SED) -ne '/Warning: Hyper reference/p' $(basename $<).log
	$(QUIET)$(SED) -n \
		-e '/Warning: There were \(undefined references\|multiply-defined labels\)/{p; q 1}' \
		$(basename $<).log
	$(call MSG_L1,Fresh LaTeX-generated PDF is now at $@)

 # Validating SDKRef.xml. It is invoked automatically at build time,
 # but can also be manually invoked via the 'validate-sdkref' alias.
 $(VBOX_PATH_MANUAL_OUTBASE)/en_US/validatesdkref.run: \
 		$(VBOX_PATH_MANUAL_SRC)/en_US/SDKRef.xml \
 		$(addprefix $(VBOX_PATH_MANUAL_SRC)/en_US/,$(VBOX_SDKREF_XML_FILES)) \
 		$(VBOX_MANUAL_APIREF_TMP) \
 		$(VBOX_XML_CATALOG) $(VBOX_XML_CATALOG_DOCBOOK) $(VBOX_XML_CATALOG_MANUAL) \
 		$(VBOX_XML_ENTITIES) $(MAKEFILE_CURRENT) | $$(dir $$@)
	$(call MSG_L1,Validating $<)
	$(QUIET)$(VBOX_XMLLINT_WITH_CAT) --dtdvalid $(VBOX_PATH_DOCBOOK_DTD)/docbookx.dtd $<
	$(QUIET)$(APPEND) -t "$@" "done"


 # Handy aliases.
 validate-sdkref:: $(VBOX_PATH_MANUAL_OUTBASE)/en_US/validatesdkref.run
 sdkref:: $(PATH_STAGE_BIN)/sdk/docs/SDKRef.pdf



 #
 # Accessibility.pdf
 #

 # Turn Accessibility.xml into LaTeX.
 $(VBOX_PATH_MANUAL_OUTBASE)/en_US/Accessibility.tex: \
 		$(addprefix $(VBOX_PATH_MANUAL_SRC)/en_US/,$(VBOX_ACCESSIBILITY_XML_FILES)) \
 		$(VBOX_PATH_MANUAL_SRC)/docbook2latex.xsl \
 		$(if $(VBOX_HAVE_XMLLINT),$(VBOX_PATH_MANUAL_OUTBASE)/en_US/validateaccessibility.run,) \
 		$(VBOX_XML_CATALOG) $(VBOX_XML_CATALOG_DOCBOOK) $(VBOX_XML_CATALOG_MANUAL) \
 		$(VBOX_XML_ENTITIES) $(MAKEFILE_CURRENT) | $$(dir $$@)
	$(call MSG_TOOL,xsltproc $(notdir $(filter %.xsl,$^)),,$(firstword $(filter %.xml,$^)),$@)
	$(QUIET)$(RM) -f $(addprefix $(@D/),$(VBOX_ACCESSIBILITY_LATEX_FILES_TARGET))
 #	generate TeX source from processed docbook and store it in Accessibility.tex.tmp
	$(QUIET)$(call VBOX_XSLTPROC_WITH_CAT) --stringparam TARGETLANG en_US \
		-o $@.tmp $(VBOX_PATH_MANUAL_SRC)/docbook2latex.xsl $<
 #	for pretty quotes, replace " with `` or '' depending on whether it's at the start of a word;
 #   the \QUOTE{} was inserted by docbook2latex.xsl for all quotes _outside_ of screen sections
	$(QUIET)$(SED) \
		-e 's|^\\QUOTE{}|\\OQ{}|g' \
		-e 's|\(\W\)\\QUOTE{}|\1\\OQ{}|g' \
		-e 's|\(\w\)\\QUOTE{}|\1\\CQ{}|g' \
		--output $@ $@.tmp
	$(QUIET)$(RM) -f $@.tmp

 # Turn Accessibility.tex into a PDF.
 $(VBOX_PATH_MANUAL_OUTBASE)/en_US/Accessibility.pdf: \
 		$(VBOX_PATH_MANUAL_OUTBASE)/en_US/Accessibility.tex \
 		$(if $(VBOX_OSE),,$(VBOX_PATH_MANUAL_OUTBASE)/en_US/ucs.sty) \
 		$(addprefix $(VBOX_PATH_MANUAL_OUTBASE)/en_US/,$(VBOX_MANUAL_PNG_FILES_en_US)) | $$(dir $$@)
	$(call MSG_L1,pdflatex $< (three passes))
	$(QUIET)$(REDIRECT) -C $(<D) -- $(VBOX_PDFLATEX_CMD) Accessibility.tex
	$(QUIET)$(REDIRECT) -C $(<D) -- $(VBOX_PDFLATEX_CMD) Accessibility.tex
	$(QUIET)$(REDIRECT) -C $(<D) -- $(VBOX_PDFLATEX_CMD) Accessibility.tex
	$(QUIET)$(SED) -ne '/Warning: Hyper reference/p' $(basename $<).log
	$(QUIET)$(SED) -n \
		-e '/Warning: There were \(undefined references\|multiply-defined labels\)/{p; q 1}' \
		$(basename $<).log
	$(call MSG_L1,Fresh LaTeX-generated PDF is now at $@)

 $(VBOX_PATH_MANUAL_OUTBASE)/en_US/html-single/Accessibility.html: \
 		$(addprefix $(VBOX_PATH_MANUAL_SRC)/en_US/,$(VBOX_ACCESSIBILITY_XML_FILES)) \
 		$(VBOX_DOCBOOK_HTML_ONE_PAGE_FORMATCFG) \
 		$(VBOX_XML_CATALOG) $(VBOX_XML_CATALOG_DOCBOOK) $(VBOX_XML_CATALOG_MANUAL) \
 		$(VBOX_XML_ENTITIES) | $$(dir $$@)
	$(call MSG_TOOL,xsltproc $(notdir $(firstword $(filter %.xsl,$^))),,$(firstword $(filter %.xml,$^)),$@)
	$(QUIET)$(call VBOX_XSLTPROC_WITH_CAT) \
		--output $(VBOX_PATH_MANUAL_OUTBASE)/en_US/html-single/Accessibility.html \
		$(VBOX_PATH_MANUAL_SRC)/docbook-html-one-page-formatcfg.xsl \
		$<

 # Validating Accessibility.xml. It is invoked automatically at build time,
 # but can also be manually invoked via the 'validate-accessibility' alias.
 $(VBOX_PATH_MANUAL_OUTBASE)/en_US/validateaccessibility.run: \
 		$(VBOX_PATH_MANUAL_SRC)/en_US/Accessibility.xml \
 		$(addprefix $(VBOX_PATH_MANUAL_SRC)/en_US/,$(VBOX_ACCESSIBILITY_XML_FILES)) \
 		$(VBOX_XML_CATALOG) $(VBOX_XML_CATALOG_DOCBOOK) $(VBOX_XML_CATALOG_MANUAL) \
 		$(VBOX_XML_ENTITIES) $(MAKEFILE_CURRENT) | $$(dir $$@)
	$(call MSG_L1,Validating $<)
	$(QUIET)$(VBOX_XMLLINT_WITH_CAT) --dtdvalid $(VBOX_PATH_DOCBOOK_DTD)/docbookx.dtd $<
	$(QUIET)$(APPEND) -t "$@" "done"


 # Handy aliases.
 validate-accessibility:: $(VBOX_PATH_MANUAL_OUTBASE)/en_US/validateaccessibility.run
 accessibility:: $(PATH_STAGE_BIN)/Accessibility.pdf
 accessibility-html:: $(VBOX_PATH_MANUAL_OUTBASE)/en_US/html-single/Accessibility.html


 # A few things which are shared between htmlhelp and qhelp docs.
 VBOX_DOCBOOK_HTMLHELP_FORMATCFG = \
 	$(VBOX_PATH_MANUAL_SRC)/docbook-htmlhelp-formatcfg.xsl \
 	$(VBOX_PATH_MANUAL_SRC)/common-formatcfg.xsl \
 	$(VBOX_PATH_MANUAL_SRC)/common-html-formatcfg.xsl

 # Prepare the XSL file for our title page, htmlhelp and qhelp variant.
 $(VBOX_PATH_MANUAL_OUTBASE)/titlepage-htmlhelp.xsl: \
 		$(VBOX_PATH_MANUAL_SRC)/titlepage-htmlhelp.xml $(MAKEFILE_CURRENT) | $$(dir $$@)
	$(call MSG_L1,xsltproc $<)
	$(QUIET)$(RM) -f $@.tmp $@
	$(QUIET)$(VBOX_XSLTPROC) --xinclude --nonet -o $@.tmp $(VBOX_PATH_DOCBOOK)/template/titlepage.xsl $<
	$(QUIET)$(MV) -f $@.tmp $@

 # Packing the docs into a zip file
 $(PATH_STAGE_BIN)/VBoxDocumentation.zip: $(VBOX_MANUAL_PACK)
	$(call MSG_L1,Packing documentation $@)
	$(QUIET)$(RM) -f $@
	$(QUIET)$(REDIRECT) -C $(PATH_STAGE_BIN) -- $(VBOX_ZIP) -9 $@ $(notdir $^)


 ##########################################################################################
 #
 #  UserManual.html
 #
 ##########################################################################################

 ifdef TO_BE_REMOVED
  VBOX_DOCBOOK_HTML_ONE_PAGE_FORMATCFG = \
  	$(VBOX_PATH_MANUAL_SRC)/docbook-html-one-page-formatcfg.xsl \
  	$(VBOX_PATH_MANUAL_SRC)/common-formatcfg.xsl \
  	$(VBOX_PATH_MANUAL_SRC)/common-html-formatcfg.xsl

  $(VBOX_PATH_MANUAL_OUTBASE)/en_US/html-single/UserManual.html: \
  		$(addprefix $(VBOX_PATH_MANUAL_SRC)/en_US/,$(VBOX_MANUAL_XML_FILES)) \
  		$(VBOX_MANUAL_XML_FILES_COMMON) \
  		$(VBOX_MANUAL_XML_FILES_GENERATED_en_US) \
  		$(addprefix $(VBOX_PATH_MANUAL_SRC)/en_US/,$(VBOX_MANUAL_PNG_FILES_en_US)) \
  		$(VBOX_DOCBOOK_HTML_ONE_PAGE_FORMATCFG) \
  		$(if $(VBOX_HAVE_XMLLINT),$(VBOX_PATH_MANUAL_OUTBASE)/en_US/validatemanual.run,) \
  		$(VBOX_XML_CATALOG) $(VBOX_XML_CATALOG_DOCBOOK) $(VBOX_XML_CATALOG_MANUAL) \
  		$(VBOX_XML_ENTITIES) | $$(dir $$@)
	$(call MSG_TOOL,xsltproc $(notdir $(firstword $(filter %.xsl,$^))),,$(firstword $(filter %.xml,$^)),$@)
	$(QUIET)$(call VBOX_XSLTPROC_WITH_CAT) \
		--output $(VBOX_PATH_MANUAL_OUTBASE)/en_US/html-single/UserManual.html \
		$(VBOX_PATH_MANUAL_SRC)/docbook-html-one-page-formatcfg.xsl \
		$<

  VBOX_DOCBOOK_HTML_CHUNKS_FORMATCFG = \
  	$(VBOX_PATH_MANUAL_SRC)/docbook-html-chunks-formatcfg.xsl \
  	$(VBOX_PATH_MANUAL_SRC)/common-formatcfg.xsl \
  	$(VBOX_PATH_MANUAL_SRC)/common-html-formatcfg.xsl

  $(VBOX_PATH_MANUAL_OUTBASE)/en_US/html-chunks/index.html: \
  		$(addprefix $(VBOX_PATH_MANUAL_SRC)/en_US/,$(VBOX_MANUAL_XML_FILES)) \
  		$(VBOX_MANUAL_XML_FILES_COMMON) \
  		$(VBOX_MANUAL_XML_FILES_GENERATED_en_US) \
  		$(VBOX_DOCBOOK_HTML_CHUNKS_FORMATCFG) \
  		$(addprefix $(VBOX_PATH_MANUAL_SRC)/en_US/,$(VBOX_MANUAL_PNG_FILES_en_US)) \
  		$(if $(VBOX_HAVE_XMLLINT),$(VBOX_PATH_MANUAL_OUTBASE)/en_US/validatemanual.run,) \
  		$(VBOX_XML_CATALOG) $(VBOX_XML_CATALOG_DOCBOOK) $(VBOX_XML_CATALOG_MANUAL) \
  		$(VBOX_XML_ENTITIES) | $$(dir $$@)
	$(call MSG_TOOL,xsltproc $(notdir $(firstword $(filter %.xsl,$^))),,$(firstword $(filter %.xml,$^)),$@)
	$(QUIET)$(call VBOX_XSLTPROC_WITH_CAT) \
		--output $(VBOX_PATH_MANUAL_OUTBASE)/en_US/html-chunks/index.html \
		--stringparam chunk.section.depth 0 \
		$(VBOX_PATH_MANUAL_SRC)/docbook-html-chunks-formatcfg.xsl \
		$<

  $(VBOX_PATH_MANUAL_OUTBASE)/en_US/UserManual.zip: \
  		$(VBOX_PATH_MANUAL_OUTBASE)/en_US/html-single/UserManual.html \
  		$(VBOX_PATH_MANUAL_OUTBASE)/en_US/html-chunks/index.html \
  		$(addprefix $(VBOX_PATH_MANUAL_OUTBASE)/en_US/,$(VBOX_MANUAL_PNG_FILES_en_US))
	$(call MSG_L1,Packing documentation $@)
	$(QUIET)$(RM) -f $@
	$(QUIET)$(REDIRECT) -C $(VBOX_PATH_MANUAL_OUTBASE)/en_US/ -- $(VBOX_ZIP) \
		-9 -r $@ html-single html-chunks $(VBOX_MANUAL_PNG_FILES_en_US)
 endif # TO_BE_REMOVED

 $(VBOX_PATH_MANUAL_OUTBASE)/en_US/UserManual.zip: \
 		$(VBOX_PATH_MANUAL_OUTBASE)/en_US/html-chunks/index.html
	$(call MSG_L1,Packing documentation $@)
	$(QUIET)$(RM) -f $@
	$(QUIET)$(REDIRECT) -C $(VBOX_PATH_MANUAL_OUTBASE)/en_US/ -- $(VBOX_ZIP) \
		-9 -r $@ html-chunks

 $(VBOX_PATH_MANUAL_OUTBASE)/en_US/html-chunks/index.html: \
 		dita_common
		$(call MSG_L1,Building html chunks $@)
		$(QUIET)$(call VBOX_DITA_ENV_SETUP) \
		$(VBOX_JAVA) -jar $(VBOX_DITA_PATH_LIB)/dost.jar /i:$(VBOX_PATH_MANUAL_OUTBASE)/en_US/dita/UserManual.ditamap \
			/transtype:xhtml /ditadir:$(VBOX_DITA_PATH) /outdir:$(@D) /tempdir:$(VBOX_PATH_MANUAL_OUTBASE)/en_US/dita/temp_xhtml

 # disable for now
 #html:: $(VBOX_PATH_MANUAL_OUTBASE)/en_US/html-single/UserManual.html
 html:: $(VBOX_PATH_MANUAL_OUTBASE)/en_US/html-chunks/index.html
 qhelp:: $(addprefix $(VBOX_PATH_MANUAL_OUTBASE)/en_US/qhelp/, $(VBOX_QHELP_OUTPUT_FILES))
 html-zip:: $(VBOX_PATH_MANUAL_OUTBASE)/en_US/UserManual.zip

 ##########################################################################################
 #
 #  DITA stuff common to pdf, qhelp, and html outputs.
 #  - copy DITA-OT library (binaries etc) since at each run several run-time config
 #     files are updated.
 #	- create dita/topic folder and copy all user manual dita files under that.
 #  - copy all images under dita/topics/images and UserManual.ditamap under dita folder
 #  - copy all man_VBox???.xml docbook files under dita/topic folder.
 #  - flatten refsect1/refsect2 hierarchy in man_VBox???.xml docbook files by
 #    using refsect2_to_refsect1.py.
 #  - convert man_VBox???.xml files into dita files
 #  - mark external link in the man_VBox????.dita files
 #  - correct all reference targets by calling correct_references.py.
 #
 ##########################################################################################

 VBOX_USER_MANUAL_DITA_FILES = $(wildcard $(VBOX_PATH_MANUAL_SRC)/en_US/dita/topics/*dita)
 VBOX_USER_MANUAL_DITA_IMAGES = $(wildcard $(VBOX_PATH_MANUAL_SRC)/en_US/dita/topics/images/*)

 $(VBOX_PATH_MANUAL_OUTBASE)/en_US/dita/UserManual.ditamap:
	$(QUIET)$(MKDIR) -p  $(VBOX_PATH_MANUAL_OUTBASE)/en_US/dita/topics/images
	$(QUIET)$(INSTALL_STAGING) -m0644 -- $(VBOX_PATH_MANUAL_SRC)/en_US/dita/UserManual.ditamap "$(@D)"
	$(QUIET)$(INSTALL_STAGING) -m0644 -- $(VBOX_USER_MANUAL_DITA_FILES) "$(@D)/topics"
	$(QUIET)touch -- "$(@D)/topics/reference.dtd"
	$(QUIET)$(INSTALL_STAGING) -m0644 -- $(VBOX_USER_MANUAL_DITA_IMAGES) "$(@D)/topics/images"

 $(VBOX_PATH_MANUAL_OUTBASE)/en_US/dita/topics/man_VBoxManage-dhcpserver-dhcpoptions.xml:
	$(QUIET)$(MKDIR) -p  $(notdir $@)
	$(QUIET)$(INSTALL_STAGING) -m0644 -- $(VBOX_PATH_MANUAL_SRC)/en_US/$(notdir $@) "$(@D)"

 correct_reference_targets: \
 		$$(VBOX_PATH_MANUAL_SRC)/correct_references.py \
 		$$(VBOX_PATH_MANUAL_OUTBASE)/en_US/dita/topics/ \
 		$$(VBOX_REFENTRY_DITA_FILES)
		$(call MSG_L1,correct_references.py -d $(VBOX_PATH_MANUAL_OUTBASE)/en_US/dita/topics)
		$(QUIET)$(VBOX_BLD_PYTHON) $(VBOX_PATH_MANUAL_SRC)/correct_references.py -d $(VBOX_PATH_MANUAL_OUTBASE)/en_US/dita/topics

 dita_common: \
 		$$(VBOX_PATH_MANUAL_OUTBASE)/en_US/dita/UserManual.ditamap \
 		$$(VBOX_DITA_PATH) \
 		correct_reference_targets
		$(call MSG_L1, Running common dita steps)

 ##########################################################################################
 #
 #  Docbook to Dita conversion of our refentry files
 #
 ##########################################################################################
 define def_vbox_refentry_to_dita
  $$(VBOX_PATH_MANUAL_OUTBASE)/$(1)/dita/topics/$(addsuffix .dita,$(basename $(2))): \
  		$$(VBOX_DITA_CONVERTER_PATH)/db2dita/docbook2dita.xsl \
  		$(VBOX_PATH_MANUAL_SRC)/$(1)/$(2) \
  		$(VBOX_PATH_MANUAL_OUTBASE)/en_US/dita/topics/man_VBoxManage-dhcpserver-dhcpoptions.xml \
  		$$(VBOX_XML_CATALOG) $$(VBOX_XML_CATALOG_DOCBOOK) $$(VBOX_XML_CATALOG_MANUAL) \
  		$$(VBOX_XML_ENTITIES) $$(VBOX_VERSION_STAMP) | $$$$(dir $$$$@)

	$$(QUIET)$$(RM) -f "$$@"
	$$(QUIET)$$(VBOX_BLD_PYTHON) $$(VBOX_PATH_MANUAL_SRC)/refsect2_to_refsect1.py -i $$(VBOX_PATH_MANUAL_SRC)/$(1)/$(2) -o $$(VBOX_PATH_MANUAL_OUTBASE)/$(1)/dita/topics/$(2)
	$$(call MSG_TOOL,xsltproc $$(notdir $$(firstword $$(filter %.xsl,$$^))),,$$(firstword $$(filter %.xml,$$^)),$$@)
	$$(QUIET)$$(call VBOX_XSLTPROC_WITH_CAT) --maxdepth 6000 --output $$@ $$(VBOX_DITA_CONVERTER_PATH)/db2dita/docbook2dita.xsl $$(VBOX_PATH_MANUAL_OUTBASE)/$(1)/dita/topics/$(2)
	$$(QUIET)$$(call VBOX_XSLTPROC_WITH_CAT) --maxdepth 6000 --output $$@ $(VBOX_PATH_MANUAL_SRC)/mark_external_urls.xsl $$@
 endef
 $(foreach lang,$(VBOX_MANUAL_LANGUAGES),$(foreach file,$(VBOX_MANUAL_XML_REFENTRY_FILES) man_vboximg-mount.xml\
, $(evalcall2 def_vbox_refentry_to_dita,$(lang),$(file))))

 refentry-to-dita: $(foreach lang,$(VBOX_MANUAL_LANGUAGES),$(foreach file, $(basename $(VBOX_MANUAL_XML_REFENTRY_FILES)) man_vboximg-mount \
 				,$$(VBOX_PATH_MANUAL_OUTBASE)/$(lang)/dita/topics/$(file).dita))

 VBOX_REFENTRY_DITA_FILES = $(foreach lang,$(VBOX_MANUAL_LANGUAGES),$(foreach file, $(basename $(VBOX_MANUAL_XML_REFENTRY_FILES)) man_vboximg-mount \
 	,$(VBOX_PATH_MANUAL_OUTBASE)/$(lang)/dita/topics/$(file).dita))

 ##########################################################################################
 #
 #  Use DITA-OT to create pdf/hhp out of UserManual.ditamap. See usermanual.pdf under
 #  DITA-OT-xxxxx/doc folder for details.
 #
 ##########################################################################################
 # Copy the dita library under out folder since at each use the library modifies some
 # run-time configuation files.
 $(VBOX_DITA_PATH):
	$(MKDIR) -p $(VBOX_DITA_PATH)
	cp -R $(VBOX_DITA_ORIGINAL_PATH)/* $(VBOX_DITA_PATH)/

 VBOX_DITA_PATH_LIB ?= $(VBOX_DITA_PATH)/lib
 VBOX_DITA_ENV_SETUP ?= $(REDIRECT) \
 	-E 'ANT_OPTS=-Xmx512m -Djavax.xml.transform.TransformerFactory=net.sf.saxon.TransformerFactoryImpl' \
 	-E 'ANT_HOME=$(VBOX_DITA_PATH)/tools/ant' \
 	-E 'DITA_DIR=$(VBOX_DITA_PATH)' \
 	-E 'JAVA_HOME=$(VBOX_JAVA_HOME)' \
 	-A 'PATH=$(HOST_PATH_SEP)$(VBOX_DITA_PATH)/tools/ant/bin' \
 	-E 'CLASSPATH=$(VBOX_DITA_PATH_LIB)/dost.jar' \
 	-A 'CLASSPATH=$(HOST_PATH_SEP)$(VBOX_DITA_PATH_LIB)' \
 	-A 'CLASSPATH=$(HOST_PATH_SEP)$(VBOX_DITA_PATH_LIB)/commons-codec-1.4.jar' \
 	-A 'CLASSPATH=$(HOST_PATH_SEP)$(VBOX_DITA_PATH_LIB)/resolver.jar' \
 	-A 'CLASSPATH=$(HOST_PATH_SEP)$(VBOX_DITA_PATH_LIB)/icu4j.jar' \
 	-A 'CLASSPATH=$(HOST_PATH_SEP)$(VBOX_DITA_PATH_LIB)/xercesImpl.jar' \
 	-A 'CLASSPATH=$(HOST_PATH_SEP)$(VBOX_DITA_PATH_LIB)/xml-apis.jar' \
 	-A 'CLASSPATH=$(HOST_PATH_SEP)$(VBOX_DITA_PATH_LIB)/saxon/saxon9.jar' \
 	-A 'CLASSPATH=$(HOST_PATH_SEP)$(VBOX_DITA_PATH_LIB)/saxon/saxon9-dom.jar' \
 	--

 define def_ditamap_to_pdf
  ditamap-to-pdf: $$(VBOX_PATH_MANUAL_OUTBASE)/$(1)/UserManual.pdf
  $$(VBOX_PATH_MANUAL_OUTBASE)/$(1)/UserManual.pdf: \
  		$$(addprefix $$(VBOX_PATH_MANUAL_SRC)/$(lang)/,$$(VBOX_MANUAL_XML_FILES)) \
  		$$(VBOX_MANUAL_XML_FILES_COMMON) \
  		$$(VBOX_MANUAL_XML_FILES_GENERATED_$(lang)) \
  		dita_common
		$(QUIET)$(call VBOX_DITA_ENV_SETUP) \
		$(VBOX_JAVA) -jar $(VBOX_DITA_PATH_LIB)/dost.jar /i:$$(VBOX_PATH_MANUAL_OUTBASE)/$(1)/dita/UserManual.ditamap \
			/transtype:pdf /ditadir:$(VBOX_DITA_PATH) /outdir:$$(VBOX_PATH_MANUAL_OUTBASE)/$(1) /tempdir:$$(VBOX_PATH_MANUAL_OUTBASE)/$(1)/dita/temp_pdf

 endef
 $(foreach lang,$(VBOX_MANUAL_LANGUAGES),$(evalcall2 def_ditamap_to_pdf,$(lang)))

 #
 # ChangeLog.html
 #
 # This XSLT rule formats en_US/user_ChangeLog.xml (which includes the actual change log
 # contained in user_ChangeLogImpl.xml) as a standalone HTML file.
 #
 $(VBOX_PATH_MANUAL_OUTBASE)/en_US/ChangeLog.html: \
 		$(VBOX_PATH_MANUAL_SRC)/en_US/docbook-changelog-formatcfg.xsl \
 		$(VBOX_PATH_MANUAL_OUTBASE)/en_US/user_ChangeLog.xml \
 		$(VBOX_XML_CATALOG) $(VBOX_XML_CATALOG_DOCBOOK) $(VBOX_XML_CATALOG_MANUAL) \
 		$(VBOX_XML_ENTITIES) | $$(dir $$@)
	$(call MSG_TOOL,xsltproc $(notdir $(firstword $(filter %.xsl,$^))),,$(firstword $(filter %.xml,$^)),$@)
	$(QUIET)$(call VBOX_XSLTPROC_WITH_CAT) --output "$@" "$<" $(filter %.xml,$^)
	$(call MSG_L1,Fresh ChangeLog.html is now at $@)

 cl-html:: $(VBOX_PATH_MANUAL_OUTBASE)/en_US/ChangeLog.html



endif # if defined(VBOX_WITH_DOCS) && (!defined(VBOX_ONLY_BUILD) || defined(VBOX_ONLY_DOCS) || defined(VBOX_ONLY_SDK))


#
# VBoxManage man pages (parts also required by VBoxManage built-in help).
#

##
# Emits rules for preprocessing refentry sources (applying remarks element),
# and for producing the actual man pages.
# $(evalcall2 def_vbox_refentry_to_manpage)
# @param    1   The language
# @param    2   The file name (no path).
define def_vbox_refentry_to_manpage
 $$(VBOX_PATH_MANUAL_OUTBASE)/$(1)/$(2): \
 		$$(VBOX_PATH_MANUAL_SRC)/$(1)/$(2) \
 		$$(VBOX_PATH_MANUAL_SRC)/docbook-refentry-to-manpage-preprocessing.xsl \
 		$$(VBOX_PATH_MANUAL_OUTBASE)/$(1)/$$(VBOX_XML_XREF_TO_TEXT) \
 		$$(VBOX_XML_CATALOG) $$(VBOX_XML_CATALOG_DOCBOOK) $$(VBOX_XML_CATALOG_MANUAL) \
 		$$(VBOX_XML_ENTITIES) $$(VBOX_VERSION_STAMP) | $$$$(dir $$$$@)
	$$(call MSG_TOOL,xsltproc $$(notdir $$(firstword $$(filter %.xsl,$$^))),,$$(firstword $$(filter %.xml,$$^)),$$@)
	$$(QUIET)$$(RM) -f "$$@"
	$$(QUIET)$$(call VBOX_XSLTPROC_WITH_CAT) --output $$@ \
		$$(VBOX_PATH_MANUAL_SRC)/docbook-refentry-to-manpage-preprocessing.xsl $$<
	$$(QUIET)$$(call VBOX_XSLTPROC_WITH_CAT) --output $$@.tmp $$(VBOX_PATH_MANUAL_OUTBASE)/$(1)/$$(VBOX_XML_XREF_TO_TEXT) $$@
	$$(QUIET)$$(MV) -f -- "$$@.tmp" "$$@"
 if defined(VBOX_HAVE_XMLLINT)
	$$(VBOX_XMLLINT_WITH_CAT) --dtdvalid $$(VBOX_PATH_DOCBOOK_DTD)/docbookx.dtd $$@
 endif

 $$(VBOX_PATH_MANUAL_OUTBASE)/$(1)/$(patsubst man_%,%.1,$(basename $(2))): \
 		$$(VBOX_PATH_MANUAL_OUTBASE)/$(1)/$(2) \
 		$$(VBOX_PATH_MANUAL_SRC)/docbook-refentry-to-manpage.xsl \
 		$$(VBOX_XML_CATALOG) $$(VBOX_XML_CATALOG_DOCBOOK) $$(VBOX_XML_CATALOG_MANUAL) \
 		$$(VBOX_XML_ENTITIES) $$(VBOX_VERSION_STAMP) | $$$$(dir $$$$@)
	$$(call MSG_TOOL,xsltproc $$(notdir $$(firstword $$(filter %.xsl,$$^))),,$$(firstword $$(filter %.xml,$$^)),$$@)
	$$(QUIET)$$(RM) -f "$$@"
	$$(QUIET)$$(call VBOX_XSLTPROC_WITH_CAT) --maxdepth 6000 --output $$@ $$(VBOX_PATH_MANUAL_SRC)/docbook-refentry-to-manpage.xsl $$<
endef
$(foreach lang,$(VBOX_MANUAL_LANGUAGES),$(foreach file,$(VBOX_MANUAL_XML_REFENTRY_FILES) \
, $(evalcall2 def_vbox_refentry_to_manpage,$(lang),$(file))))

ifdef VBOX_WITH_DOCS_QHELP
 #
 # VirtualBox.qch/VirtualBox.qhc
 #
 # We first generate a .hhp help source file from the preprocessed
 # DocBook XML files, as defined above, then feed that into a converter
 # creating the suitable input for creating a QHelp collection file.

 # Generate QCH from QHelp source
 # Note: out_dir needs to be referenced with an escaped $ so it doesn't expand as eval expands it input.
 define def_vbox_usermanual_qhp_to_qch
  local out_dir := $(VBOX_PATH_MANUAL_OUTBASE)/$(lang)
  $$(out_dir)/qhelp/UserManual.qch + \
  $$(out_dir)/qhelp/UserManual.qhc: \
  		$$(out_dir)/qhelp/UserManual.qhcp \
  		$$(out_dir)/qhelp/UserManual.qhp \
  		$$(addprefix $$(out_dir)/qhelp/,$$(VBOX_MANUAL_PNG_FILES_$(lang))) \
  		| $$$$(dir $$$$@)
	$$(call MSG_L1,$$(notdir $$(QHELPGENERATOR)) $$<,=> $$@)
	$$(QUIET)$$(RM) -f $$@
	$$(QUIET)$$(REDIRECT) -E QT_QPA_PLATFORM_PLUGIN_PATH=$$(PATH_SDK_QT5)/plugins -- $$(QHELPGENERATOR) $$<
	$$(call MSG_L1,Fresh QCH is now at $$@)
 endef
 $(foreach lang,$(VBOX_MANUAL_LANGUAGES),$(evalcall2 def_vbox_usermanual_qhp_to_qch))

 # Generate QHP from HHP for QHelp
 # Note: out_dir needs to be referenced with an escaped $ so it doesn't expand as eval expands it input.
 define def_vbox_usermanual_hhp_qhelp_to_qhp
  local out_dir := $(VBOX_PATH_MANUAL_OUTBASE)/$(lang)
  $$(out_dir)/qhelp/UserManual.qhp: \
  		$$(out_dir)/qhelp/UserManual.hhp \
  		$$(addprefix $$(out_dir)/qhelp/,$$(VBOX_MANUAL_PNG_FILES_$(lang))) \
  		| $$$$(dir $$$$@)
	$$(call MSG_L1,htmlhelp-qthelp.py $$<,=> $$@)
	$$(QUIET)$$(RM) -f $$@
	$$(QUIET)$$(VBOX_BLD_PYTHON) $$(VBOX_PATH_MANUAL_SRC)/htmlhelp-qthelp.py -d $$(<D) -o $$@ -f UserManual.hhp -t UserManual.hhc
 endef
 $(foreach lang,$(VBOX_MANUAL_LANGUAGES),$(evalcall2 def_vbox_usermanual_hhp_qhelp_to_qhp))


 define def_ditamap_to_htmlhelp
  ditamap-to-htmlhelp: $$(VBOX_PATH_MANUAL_OUTBASE)/$(1)/qhelp/UserManual.hhp
  $$(VBOX_PATH_MANUAL_OUTBASE)/$(1)/qhelp/UserManual.hhp: \
  		dita_common
		$(QUIET)$(call VBOX_DITA_ENV_SETUP) \
		$(VBOX_JAVA) -jar $(VBOX_DITA_PATH_LIB)/dost.jar /i:$$(VBOX_PATH_MANUAL_OUTBASE)/$(1)/dita/UserManual.ditamap \
			/transtype:htmlhelp /ditadir:$(VBOX_DITA_PATH) /outdir:$$(VBOX_PATH_MANUAL_OUTBASE)/$(1)/qhelp /tempdir:$$(VBOX_PATH_MANUAL_OUTBASE)/$(1)/dita/temp_htmlhelp

 endef
 $(foreach lang,$(VBOX_MANUAL_LANGUAGES),$(evalcall2 def_ditamap_to_htmlhelp,$(lang)))

 # copy the qhcp file.
 define def_vbox_cp_qhcp
  local out_dir := $(VBOX_PATH_MANUAL_OUTBASE)/$(lang)/qhelp
  $$(out_dir)/UserManual.qhcp: \
  		$$(out_dir)/% : $(VBOX_PATH_MANUAL_SRC)/% | $$$$(dir $$$$@)
	$$(QUIET)$$(INSTALL_STAGING) -m0644 -- '$$<' '$$(@D)'
 endef
 $(foreach lang,$(VBOX_MANUAL_LANGUAGES),$(eval $(def_vbox_cp_qhcp)))

 # copy the PNG files.
 # Note: out_dir needs to be referenced with an escaped $ so it doesn't expand as eval expands it input.
 define def_vbox_cp_images_qhelp
  local out_dir := $(VBOX_PATH_MANUAL_OUTBASE)/$(lang)/qhelp
  $(addprefix $$(out_dir)/,$(VBOX_MANUAL_PNG_FILES_$(lang))): \
  		$$(out_dir)/% : $(VBOX_PATH_MANUAL_SRC)/$(lang)/% | $$$$(dir $$$$@)
	$$(call MSG_L1,Copying temporary $$< => $$@)
	$$(QUIET)$$(INSTALL_STAGING) -m0644 -- '$$<' '$$(@D)'
 endef
 $(foreach lang,$(VBOX_MANUAL_LANGUAGES),$(eval $(def_vbox_cp_images_qhelp)))

endif # VBOX_WITH_DOCS_QHELP

# Handy aliases.
validate-manpages:: $(addprefix $(VBOX_PATH_MANUAL_OUTBASE)/en_US/,$(VBOX_MANUAL_XML_REFENTRY_FILES))
man-experiment:: $(foreach lang,$(VBOX_MANUAL_LANGUAGES),$(foreach file,$(VBOX_MANUAL_XML_REFENTRY_FILES) \
				,$$(VBOX_PATH_MANUAL_OUTBASE)/$(lang)/$(patsubst man_%,%.1,$(basename $(file)))))

#
# Manually updating the DHCP option list taken from VirtualBox.xidl
#
dhcpoptions: $(PATH_ROOT)/doc/manual/en_US/man_VBoxManage-dhcpserver-dhcpoptions.xsl \
		$(PATH_ROOT)/src/VBox/Main/idl/VirtualBox.xidl
	$(call VBOX_XSLTPROC) --output "$(PATH_ROOT)/doc/manual/en_US/man_VBoxManage-dhcpserver-dhcpoptions.xml" $+


include $(FILE_KBUILD_SUB_FOOTER)

