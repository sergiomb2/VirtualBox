# $Id$
## @file
# Sub-Makefile for the Shared OpenGL Host Service.
#

#
# Copyright (C) 2008-2019 Oracle Corporation
#
# This file is part of VirtualBox Open Source Edition (OSE), as
# available from http://www.virtualbox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualBox OSE distribution. VirtualBox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#

SUB_DEPTH = ../../../..
include $(KBUILD_PATH)/subheader.kmk


#
# Target lists.
#
ifdef VBOX_WITH_MAIN
LIBRARIES += VBoxOGLrenderspu
BLDDIRS   += \
	$(VBOX_PATH_CROGL_GENFILES)/
endif

ifeq ($(KBUILD_TARGET),darwin)
 #
 # We have to symlink the system headers of OpenGl cause they have some
 # different directory hierarchy on Mac OS X (no /GL sub directory).
 #
 # See Config.kmk for the global variables.
 #
 INSTALLS += DarwinOpenGLHdrs
 DarwinOpenGLHdrs_INST     = $(VBOX_DARWIN_OPENGL_INST)
 DarwinOpenGLHdrs_SYMLINKS = \
 	$(foreach hdr, $(VBOX_DARWIN_OPENGL_HEADERS),\
 		$(hdr)=>$(VBOX_PATH_MACOSX_SDK)/System/Library/Frameworks/OpenGL.framework/Versions/Current/Headers/$(hdr))
endif # darwin

#
# VBoxOGLrenderspu
#
VBoxOGLrenderspu_TEMPLATE = VBOXCROGLR3HOSTLIB
VBoxOGLrenderspu_INTERMEDIATES = \
	$(VBOX_PATH_CROGL_GENFILES)/state/cr_currentpointers.h \
	$(VBOX_PATH_CROGL_GENFILES)/state/cr_statefuncs.h
VBoxOGLrenderspu_INCS = $(VBOX_GRAPHICS_INCS)
VBoxOGLrenderspu_SOURCES = \
	render/renderspu.c \
	render/renderspu_config.c \
	render/renderspu_init.c
VBoxOGLrenderspu_SOURCES.win     = \
	render/renderspu_wgl.c
VBoxOGLrenderspu_SOURCES.linux   = render/renderspu_glx.c
VBoxOGLrenderspu_SOURCES.solaris = render/renderspu_glx.c
VBoxOGLrenderspu_SOURCES.freebsd = render/renderspu_glx.c
VBoxOGLrenderspu_OBJCFLAGS.darwin = -Wno-shadow
VBoxOGLrenderspu_SOURCES.darwin  = \
	OpenGLTest/OpenGLTestDarwin.cpp \
	render/renderspu_cocoa.c \
	render/renderspu_cocoa_helper.m
ifdef VBOX_WITH_CRHGSMI
VBoxOGLrenderspu_DEFS += VBOX_WITH_CRHGSMI
endif
ifdef VBOX_WITH_VDMA
VBoxOGLrenderspu_DEFS += VBOX_WITH_VDMA
endif

LIBRARIES += VBoxOGLTest
VBoxOGLTest_TEMPLATE = VBOXR3NP
ifneq ($(KBUILD_TARGET),darwin)
  VBoxOGLTest_SOURCES = OpenGLTest/OpenGLTest.cpp
endif
VBoxOGLTest_SOURCES.darwin = OpenGLTest/OpenGLTestDarwin.cpp

#
# VBoxTestOGL - OpenGL support test app.
# Note! Doesn't link with VBOX_WITH_DEBUG_VCC_CRT defined because it uses Qt.
#
if (   defined(VBOX_WITH_QTGUI) \
    && (defined(VBOX_WITH_CROGL) || defined(VBOX_WITH_VIDEOHWACCEL)) \
    && !defined(VBOX_WITH_DEBUG_VCC_CRT))
 ifneq ($(KBUILD_TARGET),darwin)
  ifdef VBOX_WITH_VIDEOHWACCEL
   USES += qt5
  endif
  PROGRAMS += VBoxTestOGL
  VBoxTestOGL_TEMPLATE = $(if $(VBOX_WITH_VIDEOHWACCEL),$(if $(VBOX_WITH_HARDENING),VBOXQTGUI,VBOXQTGUIEXE),VBOXMAINEXE)
  VBoxTestOGL_INCS     += $(VBOX_PATH_CROGL_INCLUDE) $(VBOX_PATH_CROGL_GENFILES)
  VBoxTestOGL_DEFS.win         = _WIN32_WINNT=0x0500 WINDOWS=1
  VBoxTestOGL_DEFS.linux       = Linux=1 _GNU_SOURCE
  VBoxTestOGL_DEFS.solaris     = SunOS=1 _GNU_SOURCE #GLEXT_64_TYPES_DEFINED
  VBoxTestOGL_DEFS.darwin      = DARWIN=1 GL_GLEXT_LEGACY _GNU_SOURCE
  VBoxTestOGL_DEFS.freebsd     = FreeBSD=1 _GNU_SOURCE
  VBoxTestOGL_SOURCES = OpenGLTest/OpenGLTestApp.cpp
  VBoxTestOGL_SOURCES.win = OpenGLTest/VBoxTestOGL.rc
  VBoxTestOGL_LIBS = \
  	$(if $(VBOX_WITH_CROGL), \
  	    $(PATH_STAGE_LIB)/VBoxOGLhosterrorspu$(VBOX_SUFF_LIB) \
	    $(PATH_STAGE_LIB)/VBoxOGLrenderspu$(VBOX_SUFF_LIB) \
  	    $(PATH_STAGE_LIB)/VBoxOGLhostspuload$(VBOX_SUFF_LIB) \
  	    $(PATH_STAGE_LIB)/VBoxOGLhostcrutil$(VBOX_SUFF_LIB),) \
  	$(if $(VBOX_WITH_VIDEOHWACCEL), $(PATH_STAGE_LIB)/VBoxOGL2D$(VBOX_SUFF_LIB),) \
  	$(LIB_RUNTIME)
  VBoxTestOGL_DEFS += \
    VBOX_BUILD_TARGET=\"$(KBUILD_TARGET).$(KBUILD_TARGET_ARCH)\" \
    $(if $(VBOX_WITH_CROGL), VBOX_WITH_CROGL,) \
    $(if $(VBOX_WITH_VIDEOHWACCEL), VBOX_WITH_VIDEOHWACCEL,)
  ifdef VBOX_WITH_VIDEOHWACCEL
   VBoxTestOGL_QT_MODULES   += Core Gui OpenGL Widgets
   VBoxTestOGL_LIBS.linux   += xcb
   VBoxTestOGL_LIBS.solaris += xcb
   VBoxTestOGL_LIBS.freebsd += xcb
   VBoxTestOGL_LDFLAGS.darwin += -framework OpenGL -framework IOKit
   VBoxTestOGL_LIBS.win       += $(PATH_SDK_$(VBOX_WINPSDK)_LIB)/Opengl32.lib
   if1of ($(KBUILD_TARGET), solaris linux freebsd)
    # must come after VBoxOGL2D, therefore don't set the arch-specific LIBS variable here!
    VBoxTestOGL_LIBS += GL pthread dl
   endif
  endif
  if1of ($(KBUILD_TARGET), freebsd linux netbsd openbsd solaris) # the X11 gang
   VBoxTestOGL_LIBS += \
  	Xmu \
  	X11 \
  	Xext
   VBoxTestOGL_LIBPATH = \
	$(VBOX_LIBPATH_X11)
endif
  # Don't let ld strip out explicitly linked libraries even when they are not needed.
  # This was causing some dynamic library loading problems in case of indirect dependencies
  # in systems where RUNPATH instead of RPATH is utilized.
  VBoxTestOGL_LDFLAGS.linux = -Wl,--no-as-needed
  VBoxTestOGL_LDFLAGS.win = /SUBSYSTEM:windows
 endif
endif

include $(FILE_KBUILD_SUB_FOOTER)

