# $Id$
## @file
# Sub-Makefile for the VirtualBox Guest/Host OpenGL part
#

#
# Copyright (C) 2008-2019 Oracle Corporation
#
# This file is part of VirtualBox Open Source Edition (OSE), as
# available from http://www.virtualbox.org. This file is free software;
# you can redistribute it and/or modify it under the terms of the GNU
# General Public License (GPL) as published by the Free Software
# Foundation, in version 2 as it comes in the "COPYING" file of the
# VirtualBox OSE distribution. VirtualBox OSE is distributed in the
# hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
#

SUB_DEPTH = ../../../..
include $(KBUILD_PATH)/subheader.kmk


#
# Target lists.
#
BLDDIRS += \
	$(VBOX_PATH_CROGL_GENFILES)/ \
	$(VBOX_PATH_CROGL_GENFILES)/state/

ifdef VBOX_WITH_ADDITIONS
 ifn1of ($(KBUILD_TARGET), darwin os2)
  VBOX_WITH_CROGL_ADDITIONS = 1
 endif
endif

ifdef VBOX_WITH_CROGL_ADDITIONS
 LIBRARIES += VBoxOGLcrpacker VBoxOGLcrstate
endif

#
# VBoxOGLcrpacker
#
VBoxOGLcrpacker_TEMPLATE = VBOXCROGLR3GUESTLIB
VBoxOGLcrpacker_INCS = \
	packer \
	$(VBOX_GRAPHICS_INCS)
if1of ($(KBUILD_TARGET), linux solaris freebsd)
 VBoxOGLcrpacker_INCS += \
	$(VBOX_GL_INCS)
endif
VBoxOGLcrpacker_INTERMEDIATES = \
	$(VBOX_PATH_CROGL_GENFILES)/cr_packfunctions.h \
	$(VBOX_PATH_CROGL_GENFILES)/cr_opcodes.h \
	$(VBOX_PATH_CROGL_GENFILES)/state/cr_currentpointers.h \
	$(VBOX_PATH_CROGL_GENFILES)/state/cr_statefuncs.h \
	$(VBOX_PATH_CROGL_GENFILES)/spu_dispatch_table.h
VBoxOGLcrpacker_SOURCES = \
	packer/pack_arrays.c \
	packer/pack_beginend.c \
	packer/pack_bounds.c \
	packer/pack_buffer.c \
	packer/pack_bufferobject.c \
	packer/pack_client.c \
	packer/pack_clipplane.c \
	packer/pack_context.c \
	packer/pack_error.c \
	packer/pack_extensions.c \
	packer/pack_feedback.c \
	packer/pack_fence.c \
	packer/pack_fog.c \
	packer/pack_init.c \
	packer/pack_lights.c \
	packer/pack_lists.c \
	packer/pack_map.c \
	packer/pack_point.c \
	packer/pack_misc.c \
	packer/pack_materials.c \
	packer/pack_matrices.c \
	packer/pack_pixels.c \
	packer/pack_pixelmap.c \
	packer/pack_program.c \
	packer/pack_regcombiner.c \
	packer/pack_stipple.c \
	packer/pack_texture.c \
	packer/pack_visibleregion.c \
	packer/pack_shaders.c \
	packer/pack_framebuffer.c \
	$(VBOX_PATH_CROGL_GENFILES)/pack_bbox.c \
	$(VBOX_PATH_CROGL_GENFILES)/pack_current.c \
	$(VBOX_PATH_CROGL_GENFILES)/packer.c
VBoxOGLcrpacker_CLEAN = \
	$(VBOX_PATH_CROGL_GENFILES)/pack_bbox.c \
	$(VBOX_PATH_CROGL_GENFILES)/pack_current.c \
	$(VBOX_PATH_CROGL_GENFILES)/packer.c \
	$(VBOX_PATH_CROGL_GENFILES)/cr_packfunctions.h \
	$(VBOX_PATH_CROGL_GENFILES)/cr_opcodes.h \
	$(VBOX_PATH_CROGL_GENFILES)/state/cr_currentpointers.h
ifdef VBOX_WITH_CRHGSMI
VBoxOGLcrpacker_DEFS.win    += VBOX_WITH_CRHGSMI
endif
ifdef VBOX_WITH_WDDM
VBoxOGLcrpacker_DEFS.win   += VBOX_WITH_WDDM
endif

if defined(VBOX_WITH_WDDM) && defined(VBOX_WITH_CROGL_ADDITIONS)
#
# VBoxOGLcrpacker-x86 - x86 VBoxOGLcrpacker version built for amd64 build
#
LIBRARIES.win.amd64 += VBoxOGLcrpacker-x86
VBoxOGLcrpacker-x86_TEMPLATE = VBOXCROGLR3GUESTLIB
VBoxOGLcrpacker-x86_EXTENDS = VBoxOGLcrpacker
VBoxOGLcrpacker-x86_BLD_TRG_ARCH = x86
VBoxOGLcrpacker-x86_DEFS = $(VBoxOGLcrpacker_DEFS) VBOX_WDDM_WOW64
endif

#
# Generate files for VBoxOGLcrpacker.
#
$(VBOX_PATH_CROGL_GENFILES)/packer.def: $(PATH_SUB_CURRENT)/packer/packer_defs.py $(VBOX_CROGL_API_FILES) | $$(dir $$@)
	$(call MSG_GENERATE,python,$@,$<)
	$(QUIET)$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_PATH_CROGL_PYTHON_INCLUDE),$@) $(VBOX_BLD_PYTHON) $< $(VBOX_PATH_CROGL_GLAPI)

$(VBOX_PATH_CROGL_GENFILES)/cr_packfunctions.h: $(PATH_SUB_CURRENT)/packer/pack_header.py $(PATH_SUB_CURRENT)/packer/packer_special $(VBOX_CROGL_API_FILES) | $$(dir $$@)
	$(call MSG_GENERATE,python,$@,$<)
	$(QUIET)$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_PATH_CROGL_PYTHON_INCLUDE),$@) $(VBOX_BLD_PYTHON) $< $(VBOX_PATH_CROGL_GLAPI) $(<D)

$(VBOX_PATH_CROGL_GENFILES)/cr_opcodes.h: $(PATH_SUB_CURRENT)/packer/opcodes.py $(VBOX_CROGL_API_FILES) | $$(dir $$@)
	$(call MSG_GENERATE,python,$@,$<)
	$(QUIET)$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_PATH_CROGL_PYTHON_INCLUDE),$@) $(VBOX_BLD_PYTHON) $< $(VBOX_PATH_CROGL_GLAPI)

$(VBOX_PATH_CROGL_GENFILES)/state/cr_currentpointers.h: $(PATH_SUB_CURRENT)/packer/pack_currentheader.py $(PATH_SUB_CURRENT)/packer/pack_currenttypes.py | $$(dir $(VBOX_PATH_CROGL_GENFILES)) $$(dir $$@)
	$(call MSG_GENERATE,python,$@,$<)
	$(QUIET)$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_PATH_CROGL_PYTHON_INCLUDE),$@) $(VBOX_BLD_PYTHON) $<

$(VBOX_PATH_CROGL_GENFILES)/packer.c: $(PATH_SUB_CURRENT)/packer/packer.py $(PATH_SUB_CURRENT)/packer/packer_special $(VBOX_CROGL_API_FILES) | $$(dir $$@)
	$(call MSG_GENERATE,python,$@,$<)
	$(QUIET)$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_PATH_CROGL_PYTHON_INCLUDE),$@) $(VBOX_BLD_PYTHON) $< $(VBOX_PATH_CROGL_GLAPI) $(<D)

$(VBOX_PATH_CROGL_GENFILES)/pack_bbox.c: $(PATH_SUB_CURRENT)/packer/packer_bbox.py | $$(dir $$@)
	$(call MSG_GENERATE,python,$@,$<)
	$(QUIET)$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_PATH_CROGL_PYTHON_INCLUDE),$@) $(VBOX_BLD_PYTHON) $< $(VBOX_PATH_CROGL_GLAPI)

$(VBOX_PATH_CROGL_GENFILES)/pack_current.c: $(PATH_SUB_CURRENT)/packer/pack_current.py $(PATH_SUB_CURRENT)/packer/pack_currenttypes.py | $$(dir $$@)
	$(call MSG_GENERATE,python,$@,$<)
	$(QUIET)$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_PATH_CROGL_PYTHON_INCLUDE),$@) $(VBOX_BLD_PYTHON) $<


#
# VBoxOGLcrstate
#
VBoxOGLcrstate_TEMPLATE = VBOXCROGLR3GUESTLIB
VBoxOGLcrstate_INCS = \
	state_tracker \
	$(VBOX_GRAPHICS_INCS)
if1of ($(KBUILD_TARGET), linux solaris freebsd)
 VBoxOGLcrstate_INCS += \
	$(VBOX_GL_INCS)
endif
VBoxOGLcrstate_INTERMEDIATES = \
	$(VBOX_PATH_CROGL_GENFILES)/state/cr_statefuncs.h \
	$(VBOX_PATH_CROGL_GENFILES)/state/cr_currentpointers.h \
	$(VBOX_PATH_CROGL_GENFILES)/spu_dispatch_table.h
VBoxOGLcrstate_SOURCES = \
	state_tracker/state_attrib.c \
	state_tracker/state_buffer.c \
	state_tracker/state_bufferobject.c \
	state_tracker/state_client.c \
	state_tracker/state_current.c \
	state_tracker/state_diff.c \
	state_tracker/state_enable.c \
	state_tracker/state_error.c \
	state_tracker/state_evaluators.c \
	state_tracker/state_feedback.c \
	state_tracker/state_fence.c \
	state_tracker/state_flush.c \
	state_tracker/state_fog.c \
	state_tracker/state_getstring.c \
	state_tracker/state_hint.c \
	state_tracker/state_init.c \
	state_tracker/state_lighting.c \
	state_tracker/state_limits.c \
	state_tracker/state_line.c \
	state_tracker/state_lists.c \
	state_tracker/state_multisample.c \
	state_tracker/state_occlude.c \
	state_tracker/state_pixel.c \
	state_tracker/state_point.c \
	state_tracker/state_polygon.c \
	state_tracker/state_program.c \
	state_tracker/state_rasterpos.c \
	state_tracker/state_regcombiner.c \
	state_tracker/state_stencil.c \
	state_tracker/state_texture.c \
	state_tracker/state_teximage.c \
	state_tracker/state_texdiff.c \
	state_tracker/state_transform.c \
	state_tracker/state_viewport.c \
	state_tracker/state_framebuffer.c \
	state_tracker/state_glsl.c \
	$(VBOX_PATH_CROGL_GENFILES)/state_buffer_gen.c \
	$(VBOX_PATH_CROGL_GENFILES)/state_current_gen.c \
	$(VBOX_PATH_CROGL_GENFILES)/state_fog_gen.c \
	$(VBOX_PATH_CROGL_GENFILES)/state_hint_gen.c \
	$(VBOX_PATH_CROGL_GENFILES)/state_lighting_gen.c \
	$(VBOX_PATH_CROGL_GENFILES)/state_line_gen.c \
	$(VBOX_PATH_CROGL_GENFILES)/state_multisample_gen.c \
	$(VBOX_PATH_CROGL_GENFILES)/state_polygon_gen.c \
	$(VBOX_PATH_CROGL_GENFILES)/state_regcombiner_gen.c \
	$(VBOX_PATH_CROGL_GENFILES)/state_viewport_gen.c \
	$(VBOX_PATH_CROGL_GENFILES)/state_get.c \
	$(VBOX_PATH_CROGL_GENFILES)/state_isenabled.c
ifdef VBOX_WITH_CRDUMPER
VBoxOGLcrstate_SOURCES += state_tracker/dump.cpp \
	$(VBOX_PATH_CROGL_GENFILES)/dump_gen.cpp
endif
VBoxOGLcrstate_SOURCES.win = \
	$(PATH_ROOT)/src/VBox/Runtime/common/asm/ASMBitNextClear.asm \
	$(PATH_ROOT)/src/VBox/Runtime/common/asm/ASMBitNextSet.asm

VBoxOGLcrstate_CLEAN = \
	$(VBOX_PATH_CROGL_GENFILES)/state_buffer_gen.c \
	$(VBOX_PATH_CROGL_GENFILES)/state_current_gen.c \
	$(VBOX_PATH_CROGL_GENFILES)/state_fog_gen.c \
	$(VBOX_PATH_CROGL_GENFILES)/state_hint_gen.c \
	$(VBOX_PATH_CROGL_GENFILES)/state_lighting_gen.c \
	$(VBOX_PATH_CROGL_GENFILES)/state_line_gen.c \
	$(VBOX_PATH_CROGL_GENFILES)/state_multisample_gen.c \
	$(VBOX_PATH_CROGL_GENFILES)/state_polygon_gen.c \
	$(VBOX_PATH_CROGL_GENFILES)/state_regcombiner_gen.c \
	$(VBOX_PATH_CROGL_GENFILES)/state_viewport_gen.c \
	$(VBOX_PATH_CROGL_GENFILES)/state_get.c \
	$(VBOX_PATH_CROGL_GENFILES)/state_isenabled.c \
	$(VBOX_PATH_CROGL_GENFILES)/state/cr_statefuncs.h
ifdef VBOX_WITH_CRDUMPER
VBoxOGLcrstate_CLEAN += $(VBOX_PATH_CROGL_GENFILES)/dump_gen.cpp
endif

ifneq ($(KBUILD_TARGET),win)
state_tracker/state_lists.c_CFLAGS += $(VBOX_GCC_Wno-pointer-sign)
VBoxOGLcrstate_CFLAGS +=
endif
ifdef VBOX_WITH_CRHGSMI
VBoxOGLcrstate_DEFS.win    += VBOX_WITH_CRHGSMI
endif
ifdef VBOX_WITH_WDDM
VBoxOGLcrstate_DEFS.win   += VBOX_WITH_WDDM
endif
ifdef VBOX_WITH_CRDUMPER
VBoxOGLcrstate_DEFS        += VBOX_WITH_CRDUMPER
endif

if defined(VBOX_WITH_WDDM) && defined(VBOX_WITH_CROGL_ADDITIONS)
#
# VBoxOGLcrstate-x86 - x86 VBoxOGLcrstate version built for amd64 build
#
LIBRARIES.win.amd64 += VBoxOGLcrstate-x86
VBoxOGLcrstate-x86_TEMPLATE = VBOXCROGLR3GUESTLIB
VBoxOGLcrstate-x86_EXTENDS = VBoxOGLcrstate
VBoxOGLcrstate-x86_BLD_TRG_ARCH = x86
VBoxOGLcrstate-x86_DEFS = $(VBoxOGLcrstate_DEFS) VBOX_WDDM_WOW64
endif


#
# Generate files for VBoxOGLcrstate.
#


$(VBOX_PATH_CROGL_GENFILES)/state_buffer_gen.c: $(addprefix $(PATH_SUB_CURRENT)/state_tracker/, state_buffer.txt gendiffcode.py) | $$(dir $$@)
	$(call MSG_GENERATE,python,$@,$<)
	$(QUIET)$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_PATH_CROGL_PYTHON_INCLUDE),$@) $(VBOX_BLD_PYTHON) $(<D)/gendiffcode.py buffer Buffer $(<D)

$(VBOX_PATH_CROGL_GENFILES)/state_client_gen.c: $(addprefix $(PATH_SUB_CURRENT)/state_tracker/, state_client.txt gendiffcode.py) | $$(dir $$@)
	$(call MSG_GENERATE,python,$@,$<)
	$(QUIET)$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_PATH_CROGL_PYTHON_INCLUDE),$@) $(VBOX_BLD_PYTHON) $(<D)/gendiffcode.py client Client $(<D)

$(VBOX_PATH_CROGL_GENFILES)/state_current_gen.c: $(addprefix $(PATH_SUB_CURRENT)/state_tracker/, state_current.py convert.py) $(VBOX_CROGL_API_FILES) | $$(dir $$@)
	$(call MSG_GENERATE,python,$@,$<)
	$(QUIET)$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_PATH_CROGL_PYTHON_INCLUDE),$@) $(VBOX_BLD_PYTHON) $(<D)/state_current.py

$(VBOX_PATH_CROGL_GENFILES)/state_fog_gen.c: $(addprefix $(PATH_SUB_CURRENT)/state_tracker/, state_fog.txt gendiffcode.py) | $$(dir $$@)
	$(call MSG_GENERATE,python,$@,$<)
	$(QUIET)$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_PATH_CROGL_PYTHON_INCLUDE),$@) $(VBOX_BLD_PYTHON) $(<D)/gendiffcode.py fog Fog $(<D)

$(VBOX_PATH_CROGL_GENFILES)/state_hint_gen.c: $(addprefix $(PATH_SUB_CURRENT)/state_tracker/, state_hint.txt gendiffcode.py) | $$(dir $$@)
	$(call MSG_GENERATE,python,$@,$<)
	$(QUIET)$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_PATH_CROGL_PYTHON_INCLUDE),$@) $(VBOX_BLD_PYTHON) $(<D)/gendiffcode.py hint Hint $(<D)

$(VBOX_PATH_CROGL_GENFILES)/state_lighting_gen.c: $(addprefix $(PATH_SUB_CURRENT)/state_tracker/, state_lighting.txt gendiffcode.py) | $$(dir $$@)
	$(call MSG_GENERATE,python,$@,$<)
	$(QUIET)$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_PATH_CROGL_PYTHON_INCLUDE),$@) $(VBOX_BLD_PYTHON) $(<D)/gendiffcode.py lighting Lighting $(<D)

$(VBOX_PATH_CROGL_GENFILES)/state_line_gen.c: $(addprefix $(PATH_SUB_CURRENT)/state_tracker/, state_line.txt gendiffcode.py) | $$(dir $$@)
	$(call MSG_GENERATE,python,$@,$<)
	$(QUIET)$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_PATH_CROGL_PYTHON_INCLUDE),$@) $(VBOX_BLD_PYTHON) $(<D)/gendiffcode.py line Line $(<D)

$(VBOX_PATH_CROGL_GENFILES)/state_multisample_gen.c: $(addprefix $(PATH_SUB_CURRENT)/state_tracker/, state_multisample.txt gendiffcode.py) | $$(dir $$@)
	$(call MSG_GENERATE,python,$@,$<)
	$(QUIET)$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_PATH_CROGL_PYTHON_INCLUDE),$@) $(VBOX_BLD_PYTHON) $(<D)/gendiffcode.py multisample Multisample $(<D)

$(VBOX_PATH_CROGL_GENFILES)/state_polygon_gen.c: $(addprefix $(PATH_SUB_CURRENT)/state_tracker/, state_polygon.txt gendiffcode.py) | $$(dir $$@)
	$(call MSG_GENERATE,python,$@,$<)
	$(QUIET)$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_PATH_CROGL_PYTHON_INCLUDE),$@) $(VBOX_BLD_PYTHON) $(<D)/gendiffcode.py polygon Polygon $(<D)

$(VBOX_PATH_CROGL_GENFILES)/state_regcombiner_gen.c: $(addprefix $(PATH_SUB_CURRENT)/state_tracker/, state_regcombiner.txt gendiffcode.py) | $$(dir $$@)
	$(call MSG_GENERATE,python,$@,$<)
	$(QUIET)$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_PATH_CROGL_PYTHON_INCLUDE),$@) $(VBOX_BLD_PYTHON) $(<D)/gendiffcode.py regcombiner RegCombiner $(<D)

$(VBOX_PATH_CROGL_GENFILES)/state_viewport_gen.c: $(addprefix $(PATH_SUB_CURRENT)/state_tracker/, state_viewport.txt gendiffcode.py) | $$(dir $$@)
	$(call MSG_GENERATE,python,$@,$<)
	$(QUIET)$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_PATH_CROGL_PYTHON_INCLUDE),$@) $(VBOX_BLD_PYTHON) $(<D)/gendiffcode.py viewport Viewport $(<D)

$(VBOX_PATH_CROGL_GENFILES)/state_get.c: $(addprefix $(PATH_SUB_CURRENT)/state_tracker/, state_get.py state_get.txt state_extensions_get.txt get_components.py) $(VBOX_CROGL_API_FILES) | $$(dir $$@)
	$(call MSG_GENERATE,python,$@,$<)
	$(QUIET)$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_PATH_CROGL_PYTHON_INCLUDE),$@) $(VBOX_BLD_PYTHON) $(<D)/state_get.py $(VBOX_PATH_CROGL_GLAPI) $(<D)

$(VBOX_PATH_CROGL_GENFILES)/state_isenabled.c: $(addprefix $(PATH_SUB_CURRENT)/state_tracker/, state_isenabled.py state_isenabled.txt state_extensions_isenabled.txt) $(VBOX_CROGL_API_FILES) | $$(dir $$@)
	$(call MSG_GENERATE,python,$@,$<)
	$(QUIET)$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_PATH_CROGL_PYTHON_INCLUDE),$@) $(VBOX_BLD_PYTHON) $(<D)/state_isenabled.py $(VBOX_PATH_CROGL_GLAPI) $(<D)

$(VBOX_PATH_CROGL_GENFILES)/state.def: $(addprefix $(PATH_SUB_CURRENT)/state_tracker/, state_defs.py state_special state_select_special state_feedback_special) $(VBOX_CROGL_API_FILES) | $$(dir $$@)
	$(call MSG_GENERATE,python,$@,$<)
	$(QUIET)$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_PATH_CROGL_PYTHON_INCLUDE),$@) $(VBOX_BLD_PYTHON) $(<D)/state_defs.py $(VBOX_PATH_CROGL_GLAPI) $(<D)

$(VBOX_PATH_CROGL_GENFILES)/state/cr_statefuncs.h: $(addprefix $(PATH_SUB_CURRENT)/state_tracker/, state_funcs.py state_special state_feedback_special state_select_special) $(VBOX_CROGL_API_FILES) | $$(dir $$@)
	$(call MSG_GENERATE,python,$@,$<)
	$(QUIET)$(call VBOX_CROGL_PYTHON_ENV,$(VBOX_PATH_CROGL_PYTHON_INCLUDE),$@) $(VBOX_BLD_PYTHON) $(<D)/state_funcs.py $(VBOX_PATH_CROGL_GLAPI) $(<D)



include $(FILE_KBUILD_SUB_FOOTER)

