# Copyright (c) 2001, Stanford University
# All rights reserved.
#
# See the file LICENSE.txt for information on redistributing this software.


from __future__ import print_function
import sys

sys.path.append( "../glapi_parser" )
import apiutil


apiutil.CopyrightC()

print("""
/* DO NOT EDIT - THIS FILE AUTOMATICALLY GENERATED BY state_funcs.py SCRIPT */
#ifndef CR_STATE_FUNCS_H
#define CR_STATE_FUNCS_H

#include "chromium.h"
#include "cr_error.h"
#include "state/cr_statetypes.h"

#include <iprt/cdefs.h>

#if defined(WINDOWS)
#define STATE_APIENTRY __stdcall
#else
#define STATE_APIENTRY
#endif

#ifdef __cplusplus
extern "C" {
#endif

#define STATE_UNUSED(x) ((void)x)""")



for func_name in apiutil.AllSpecials( "state" ):
	return_type = apiutil.ReturnType(func_name)
	params = apiutil.Parameters(func_name)
	if len(params) == 0:
		print('DECLEXPORT(%s) STATE_APIENTRY crState%s(PCRStateTracker pState);' % (return_type, func_name))
	else:
		print('DECLEXPORT(%s) STATE_APIENTRY crState%s(PCRStateTracker pState, %s);' % (return_type, func_name, apiutil.MakeDeclarationStringForDispatcher(params)))

for func_name in apiutil.AllSpecials( "state_feedback" ):
	return_type = apiutil.ReturnType(func_name)
	params = apiutil.Parameters(func_name)
	if len(params) == 0:
		print('DECLEXPORT(%s) STATE_APIENTRY crStateFeedback%s(PCRStateTracker pState);' % (return_type, func_name))
	else:
		print('DECLEXPORT(%s) STATE_APIENTRY crStateFeedback%s(PCRStateTracker pState, %s);' % (return_type, func_name, apiutil.MakeDeclarationStringForDispatcher(params)))

for func_name in apiutil.AllSpecials( "state_select" ):
	return_type = apiutil.ReturnType(func_name)
	params = apiutil.Parameters(func_name)
	if len(params) == 0:
		print('DECLEXPORT(%s) STATE_APIENTRY crStateSelect%s(PCRStateTracker pState);' % (return_type, func_name))
	else:
		print('DECLEXPORT(%s) STATE_APIENTRY crStateSelect%s(PCRStateTracker pState, %s);' % (return_type, func_name, apiutil.MakeDeclarationStringForDispatcher(params)))

print("""
#ifdef __cplusplus
}
#endif

#endif /* CR_STATE_FUNCS_H */
""")
