<!--
    VirtualBox Windows Installation Script (WiX)
-->
<!--
    Copyright (C) 2014-2024 Oracle and/or its affiliates.

    This file is part of VirtualBox base platform packages, as
    available from https://www.virtualbox.org.

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation, in version 3 of the
    License.

    This program is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, see <https://www.gnu.org/licenses>.

    SPDX-License-Identifier: GPL-3.0-only
-->

<Include xmlns="http://wixtoolset.org/schemas/v4/wxs">

    <CustomAction Id="ca_VBoxSupDrvInstParms" Property="ca_VBoxSupDrvInst" Value="VBoxDrvInstInfFile=[#file_VBoxSup.inf]##VBoxDrvInstModel=VBoxSup##VBoxDrvInstFlagForce=1##VBoxDrvInstFlagSilent=1" Execute="immediate" />
    <CustomAction Id="ca_VBoxSupDrvInst" DllEntry="DriverInstall" Execute="deferred" Return="check" Impersonate="no" BinaryRef="VBoxInstallHelper" />

    <CustomAction Id="ca_VBoxSupDrvStartParms" Property="ca_VBoxSupDrvStart" Value="VBoxSvcCtlName=VBoxSUP##VBoxSvcCtlFn=start" Execute="immediate" />
    <CustomAction Id="ca_VBoxSupDrvStart" DllEntry="ServiceControl" Execute="deferred" Return="check" Impersonate="no" BinaryRef="VBoxInstallHelper" />

    <CustomAction Id="ca_VBoxSupDrvUninstParms" Property="ca_VBoxSupDrvUninst" Value="VBoxDrvUninstModel=VBoxSUP*" Execute="immediate" />
    <CustomAction Id="ca_VBoxSupDrvUninst" DllEntry="DriverUninstall" Execute="deferred" Return="check" Impersonate="no" BinaryRef="VBoxInstallHelper" />

    <CustomAction Id="ca_GetPlatformArchitecture" DllEntry="GetPlatformArchitecture" Execute="immediate" Return="check" Impersonate="no" BinaryRef="VBoxInstallHelper" />
<?if $(env.VBOX_WITH_CRT_PACKING) = "no" ?>
    <CustomAction Id="ca_IsMSCRTInstalled" DllEntry="IsMSCRTInstalled" Execute="immediate" Return="ignore" Impersonate="no" BinaryRef="VBoxInstallHelper" />
<?endif?>

    <CustomAction Id="ca_IsWindowsSupported" DllEntry="IsWindowsSupported" Execute="immediate" Return="ignore" Impersonate="no" BinaryRef="VBoxInstallHelper" />

    <!-- Makes sure we check if the chosen target directory is valid before allowing to install. See @bugref{10616} -->
    <CustomAction Id="ca_CheckTargetDirPre" DllEntry="CheckTargetDir" Execute="immediate" Return="ignore" Impersonate="no" BinaryRef="VBoxInstallHelper" />
    <!-- Makes sure that the target directory we installed into still is valid. Rollback if it isn't. See @bugref{10616} -->
    <CustomAction Id="ca_CheckTargetDirPost" DllEntry="CheckTargetDir" Execute="immediate" Return="check" Impersonate="no" BinaryRef="VBoxInstallHelper" />
</Include>
